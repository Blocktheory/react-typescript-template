{"ast":null,"code":"import { pTimeout } from './callback'; // Check if a user is opening the link in a new tab\n\nfunction userNewTab(event) {\n  var typedEvent = event;\n\n  if (typedEvent.ctrlKey || typedEvent.shiftKey || typedEvent.metaKey || typedEvent.button && typedEvent.button == 1) {\n    return true;\n  }\n\n  return false;\n} // Check if the link opens in new tab\n\n\nfunction linkNewTab(element, href) {\n  if (element.target === '_blank' && href) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function link(links, event, properties, options) {\n  var _this = this;\n\n  var elements = []; // always arrays, handles jquery\n\n  if (!links) {\n    return this;\n  }\n\n  if (links instanceof Element) {\n    elements = [links];\n  } else if ('toArray' in links) {\n    elements = links.toArray();\n  } else {\n    elements = links;\n  }\n\n  elements.forEach(function (el) {\n    el.addEventListener('click', function (elementEvent) {\n      var _a, _b;\n\n      var ev = event instanceof Function ? event(el) : event;\n      var props = properties instanceof Function ? properties(el) : properties;\n      var href = el.getAttribute('href') || el.getAttributeNS('http://www.w3.org/1999/xlink', 'href') || el.getAttribute('xlink:href') || ((_a = el.getElementsByTagName('a')[0]) === null || _a === void 0 ? void 0 : _a.getAttribute('href'));\n      var trackEvent = pTimeout(_this.track(ev, props, options !== null && options !== void 0 ? options : {}), (_b = _this.settings.timeout) !== null && _b !== void 0 ? _b : 500);\n\n      if (!linkNewTab(el, href) && !userNewTab(elementEvent)) {\n        if (href) {\n          elementEvent.preventDefault ? elementEvent.preventDefault() : elementEvent.returnValue = false;\n          trackEvent.catch(console.error).then(function () {\n            window.location.href = href;\n          }).catch(console.error);\n        }\n      }\n    }, false);\n  });\n  return this;\n}\nexport function form(forms, event, properties, options) {\n  var _this = this; // always arrays, handles jquery\n\n\n  if (!forms) return this;\n  if (forms instanceof HTMLFormElement) forms = [forms];\n  var elements = forms;\n  elements.forEach(function (el) {\n    if (!(el instanceof Element)) throw new TypeError('Must pass HTMLElement to trackForm/trackSubmit.');\n\n    var handler = function (elementEvent) {\n      var _a;\n\n      elementEvent.preventDefault ? elementEvent.preventDefault() : elementEvent.returnValue = false;\n      var ev = event instanceof Function ? event(el) : event;\n      var props = properties instanceof Function ? properties(el) : properties;\n      var trackEvent = pTimeout(_this.track(ev, props, options !== null && options !== void 0 ? options : {}), (_a = _this.settings.timeout) !== null && _a !== void 0 ? _a : 500);\n      trackEvent.catch(console.error).then(function () {\n        el.submit();\n      }).catch(console.error);\n    }; // Support the events happening through jQuery or Zepto instead of through\n    // the normal DOM API, because `el.submit` doesn't bubble up events...\n\n\n    var $ = window.jQuery || window.Zepto;\n\n    if ($) {\n      $(el).submit(handler);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      el.addEventListener('submit', handler, false);\n    }\n  });\n  return this;\n}","map":{"version":3,"sources":["/Users/apple/Sites/react-typescript-template/node_modules/@segment/analytics-next/src/core/auto-track.ts"],"names":[],"mappings":"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","sourcesContent":["import { Analytics } from './analytics'\nimport { EventProperties, Options } from './events'\nimport { pTimeout } from './callback'\n\ndeclare global {\n  interface Window {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    jQuery: any\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Zepto: any\n  }\n}\n\n// Check if a user is opening the link in a new tab\nfunction userNewTab(event: Event): boolean {\n  const typedEvent = event as Event & {\n    ctrlKey: boolean\n    shiftKey: boolean\n    metaKey: boolean\n    button: number\n  }\n  if (\n    typedEvent.ctrlKey ||\n    typedEvent.shiftKey ||\n    typedEvent.metaKey ||\n    (typedEvent.button && typedEvent.button == 1)\n  ) {\n    return true\n  }\n  return false\n}\n\n// Check if the link opens in new tab\nfunction linkNewTab(element: HTMLAnchorElement, href: string | null): boolean {\n  if (element.target === '_blank' && href) {\n    return true\n  }\n  return false\n}\n\nexport interface JQueryShim<TElement = HTMLElement> {\n  toArray(): TElement[]\n}\n\nexport function link(\n  this: Analytics,\n  links: Element | Array<Element> | JQueryShim | null,\n  event: string | Function,\n  properties?: EventProperties | Function,\n  options?: Options\n): Analytics {\n  let elements: Array<Element> = []\n  // always arrays, handles jquery\n  if (!links) {\n    return this\n  }\n  if (links instanceof Element) {\n    elements = [links]\n  } else if ('toArray' in links) {\n    elements = links.toArray()\n  } else {\n    elements = links\n  }\n\n  elements.forEach((el: Element) => {\n    el.addEventListener(\n      'click',\n      (elementEvent: Event) => {\n        const ev = event instanceof Function ? event(el) : event\n        const props =\n          properties instanceof Function ? properties(el) : properties\n        const href =\n          el.getAttribute('href') ||\n          el.getAttributeNS('http://www.w3.org/1999/xlink', 'href') ||\n          el.getAttribute('xlink:href') ||\n          el.getElementsByTagName('a')[0]?.getAttribute('href')\n\n        const trackEvent = pTimeout(\n          this.track(ev, props, options ?? {}),\n          this.settings.timeout ?? 500\n        )\n\n        if (\n          !linkNewTab(el as HTMLAnchorElement, href) &&\n          !userNewTab(elementEvent)\n        ) {\n          if (href) {\n            elementEvent.preventDefault\n              ? elementEvent.preventDefault()\n              : (elementEvent.returnValue = false)\n            trackEvent\n              .catch(console.error)\n              .then(() => {\n                window.location.href = href\n              })\n              .catch(console.error)\n          }\n        }\n      },\n      false\n    )\n  })\n\n  return this\n}\n\nexport type LinkArgs = Parameters<typeof link>\n\nexport function form(\n  this: Analytics,\n  forms: HTMLFormElement | Array<HTMLFormElement> | null,\n  event: string | Function,\n  properties?: EventProperties | Function,\n  options?: Options\n): Analytics {\n  // always arrays, handles jquery\n  if (!forms) return this\n  if (forms instanceof HTMLFormElement) forms = [forms]\n\n  const elements = forms\n\n  elements.forEach((el) => {\n    if (!(el instanceof Element))\n      throw new TypeError('Must pass HTMLElement to trackForm/trackSubmit.')\n    const handler = (elementEvent: Event): void => {\n      elementEvent.preventDefault\n        ? elementEvent.preventDefault()\n        : (elementEvent.returnValue = false)\n\n      const ev = event instanceof Function ? event(el) : event\n      const props = properties instanceof Function ? properties(el) : properties\n\n      const trackEvent = pTimeout(\n        this.track(ev, props, options ?? {}),\n        this.settings.timeout ?? 500\n      )\n\n      trackEvent\n        .catch(console.error)\n        .then(() => {\n          el.submit()\n        })\n        .catch(console.error)\n    }\n\n    // Support the events happening through jQuery or Zepto instead of through\n    // the normal DOM API, because `el.submit` doesn't bubble up events...\n    const $ = window.jQuery || window.Zepto\n    if ($) {\n      $(el).submit(handler)\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      el.addEventListener('submit', handler, false)\n    }\n  })\n\n  return this\n}\n\nexport type FormArgs = Parameters<typeof form>\n"]},"metadata":{},"sourceType":"module"}