{"ast":null,"code":"import { Alias, Facade, Group, Identify, Page, Screen, Track } from '@segment/facade';\nexport function toFacade(evt, options) {\n  var fcd = new Facade(evt, options);\n\n  if (evt.type === 'track') {\n    fcd = new Track(evt, options);\n  }\n\n  if (evt.type === 'identify') {\n    fcd = new Identify(evt, options);\n  }\n\n  if (evt.type === 'page') {\n    fcd = new Page(evt, options);\n  }\n\n  if (evt.type === 'alias') {\n    fcd = new Alias(evt, options);\n  }\n\n  if (evt.type === 'group') {\n    fcd = new Group(evt, options);\n  }\n\n  if (evt.type === 'screen') {\n    fcd = new Screen(evt, options);\n  }\n\n  Object.defineProperty(fcd, 'obj', {\n    value: evt,\n    writable: true\n  });\n  return fcd;\n}","map":{"version":3,"sources":["/Users/apple/Sites/react-typescript-template/node_modules/@segment/analytics-next/src/lib/to-facade.ts"],"names":[],"mappings":"AAAA,SACE,KADF,EAEE,MAFF,EAGE,KAHF,EAIE,QAJF,EAME,IANF,EAOE,MAPF,EAQE,KARF,QASO,iBATP;AAgBA,OAAM,SAAU,QAAV,CAAmB,GAAnB,EAAsC,OAAtC,EAAuD;AAC3D,MAAI,GAAG,GAAG,IAAI,MAAJ,CAAW,GAAX,EAAgB,OAAhB,CAAV;;AAEA,MAAI,GAAG,CAAC,IAAJ,KAAa,OAAjB,EAA0B;AACxB,IAAA,GAAG,GAAG,IAAI,KAAJ,CAAU,GAAV,EAAe,OAAf,CAAN;AACD;;AAED,MAAI,GAAG,CAAC,IAAJ,KAAa,UAAjB,EAA6B;AAC3B,IAAA,GAAG,GAAG,IAAI,QAAJ,CAAa,GAAb,EAAkB,OAAlB,CAAN;AACD;;AAED,MAAI,GAAG,CAAC,IAAJ,KAAa,MAAjB,EAAyB;AACvB,IAAA,GAAG,GAAG,IAAI,IAAJ,CAAS,GAAT,EAAc,OAAd,CAAN;AACD;;AAED,MAAI,GAAG,CAAC,IAAJ,KAAa,OAAjB,EAA0B;AACxB,IAAA,GAAG,GAAG,IAAI,KAAJ,CAAU,GAAV,EAAe,OAAf,CAAN;AACD;;AAED,MAAI,GAAG,CAAC,IAAJ,KAAa,OAAjB,EAA0B;AACxB,IAAA,GAAG,GAAG,IAAI,KAAJ,CAAU,GAAV,EAAe,OAAf,CAAN;AACD;;AAED,MAAI,GAAG,CAAC,IAAJ,KAAa,QAAjB,EAA2B;AACzB,IAAA,GAAG,GAAG,IAAI,MAAJ,CAAW,GAAX,EAAgB,OAAhB,CAAN;AACD;;AAED,EAAA,MAAM,CAAC,cAAP,CAAsB,GAAtB,EAA2B,KAA3B,EAAkC;AAChC,IAAA,KAAK,EAAE,GADyB;AAEhC,IAAA,QAAQ,EAAE;AAFsB,GAAlC;AAKA,SAAO,GAAP;AACD","sourcesContent":["import {\n  Alias,\n  Facade,\n  Group,\n  Identify,\n  Options,\n  Page,\n  Screen,\n  Track,\n} from '@segment/facade'\nimport { SegmentEvent } from '../core/events'\n\nexport type SegmentFacade = Facade<SegmentEvent> & {\n  obj: SegmentEvent\n}\n\nexport function toFacade(evt: SegmentEvent, options?: Options): SegmentFacade {\n  let fcd = new Facade(evt, options)\n\n  if (evt.type === 'track') {\n    fcd = new Track(evt, options)\n  }\n\n  if (evt.type === 'identify') {\n    fcd = new Identify(evt, options)\n  }\n\n  if (evt.type === 'page') {\n    fcd = new Page(evt, options)\n  }\n\n  if (evt.type === 'alias') {\n    fcd = new Alias(evt, options)\n  }\n\n  if (evt.type === 'group') {\n    fcd = new Group(evt, options)\n  }\n\n  if (evt.type === 'screen') {\n    fcd = new Screen(evt, options)\n  }\n\n  Object.defineProperty(fcd, 'obj', {\n    value: evt,\n    writable: true,\n  })\n\n  return fcd as SegmentFacade\n}\n"]},"metadata":{},"sourceType":"module"}