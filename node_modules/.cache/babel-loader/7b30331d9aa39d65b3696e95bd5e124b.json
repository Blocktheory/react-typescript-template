{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { Context, ContextCancelation } from '../context';\n\nfunction tryOperation(op) {\n  return __awaiter(this, void 0, void 0, function () {\n    var err_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n\n          return [4\n          /*yield*/\n          , op()];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent()];\n\n        case 2:\n          err_1 = _a.sent();\n          return [2\n          /*return*/\n          , Promise.reject(err_1)];\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexport function attempt(ctx, plugin) {\n  ctx.log('debug', 'plugin', {\n    plugin: plugin.name\n  });\n  var start = new Date().getTime();\n  var hook = plugin[ctx.event.type];\n\n  if (hook === undefined) {\n    return Promise.resolve(ctx);\n  }\n\n  var newCtx = tryOperation(function () {\n    return hook.apply(plugin, [ctx]);\n  }).then(function (ctx) {\n    var done = new Date().getTime() - start;\n    ctx.stats.gauge('plugin_time', done, [\"plugin:\".concat(plugin.name)]);\n    return ctx;\n  }).catch(function (err) {\n    if (err instanceof ContextCancelation && err.type === 'middleware_cancellation') {\n      throw err;\n    }\n\n    if (err instanceof ContextCancelation) {\n      ctx.log('warn', err.type, {\n        plugin: plugin.name,\n        error: err\n      });\n      return err;\n    }\n\n    ctx.log('error', 'plugin Error', {\n      plugin: plugin.name,\n      error: err\n    });\n    ctx.stats.increment('plugin_error', 1, [\"plugin:\".concat(plugin.name)]);\n    return err;\n  });\n  return newCtx;\n}\nexport function ensure(ctx, plugin) {\n  return attempt(ctx, plugin).then(function (newContext) {\n    if (newContext instanceof Context) {\n      return newContext;\n    }\n\n    ctx.log('debug', 'Context canceled');\n    ctx.stats.increment('context_canceled');\n    ctx.cancel(newContext);\n  });\n}","map":{"version":3,"sources":["/Users/apple/Sites/react-typescript-template/node_modules/@segment/analytics-next/src/core/queue/delivery.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,EAAkB,kBAAlB,QAA4C,YAA5C;;AAGA,SAAe,YAAf,CACE,EADF,EACsC;;;;;;;;AAG3B,iBAAA,CAAA;AAAA;AAAA,YAAM,EAAE,EAAR,CAAA;;;AAAP,iBAAA,CAAA;AAAA;AAAA,YAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;AAEA,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,CAAC,MAAR,CAAe,KAAf,CAAP,CAAA;;;;;;;;;AAEH;;AAED,OAAM,SAAU,OAAV,CACJ,GADI,EAEJ,MAFI,EAEU;AAEd,EAAA,GAAG,CAAC,GAAJ,CAAQ,OAAR,EAAiB,QAAjB,EAA2B;AAAE,IAAA,MAAM,EAAE,MAAM,CAAC;AAAjB,GAA3B;AACA,MAAM,KAAK,GAAG,IAAI,IAAJ,GAAW,OAAX,EAAd;AAEA,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,KAAJ,CAAU,IAAX,CAAnB;;AACA,MAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,WAAO,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAP;AACD;;AAED,MAAM,MAAM,GAAG,YAAY,CAAC,YAAA;AAAM,WAAA,IAAI,CAAC,KAAL,CAAW,MAAX,EAAmB,CAAnB,GAAmB,CAAnB,CAAA;AAAyB,GAAhC,CAAZ,CACZ,IADY,CACP,UAAC,GAAD,EAAI;AACR,QAAM,IAAI,GAAG,IAAI,IAAJ,GAAW,OAAX,KAAuB,KAApC;AACA,IAAA,GAAG,CAAC,KAAJ,CAAU,KAAV,CAAgB,aAAhB,EAA+B,IAA/B,EAAqC,CAAC,UAAA,MAAA,CAAU,MAAM,CAAC,IAAjB,CAAD,CAArC;AACA,WAAO,GAAP;AACD,GALY,EAMZ,KANY,CAMN,UAAC,GAAD,EAAI;AACT,QACE,GAAG,YAAY,kBAAf,IACA,GAAG,CAAC,IAAJ,KAAa,yBAFf,EAGE;AACA,YAAM,GAAN;AACD;;AAED,QAAI,GAAG,YAAY,kBAAnB,EAAuC;AACrC,MAAA,GAAG,CAAC,GAAJ,CAAQ,MAAR,EAAgB,GAAG,CAAC,IAApB,EAA0B;AACxB,QAAA,MAAM,EAAE,MAAM,CAAC,IADS;AAExB,QAAA,KAAK,EAAE;AAFiB,OAA1B;AAKA,aAAO,GAAP;AACD;;AAED,IAAA,GAAG,CAAC,GAAJ,CAAQ,OAAR,EAAiB,cAAjB,EAAiC;AAC/B,MAAA,MAAM,EAAE,MAAM,CAAC,IADgB;AAE/B,MAAA,KAAK,EAAE;AAFwB,KAAjC;AAKA,IAAA,GAAG,CAAC,KAAJ,CAAU,SAAV,CAAoB,cAApB,EAAoC,CAApC,EAAuC,CAAC,UAAA,MAAA,CAAU,MAAM,CAAC,IAAjB,CAAD,CAAvC;AACA,WAAO,GAAP;AACD,GA9BY,CAAf;AAgCA,SAAO,MAAP;AACD;AAED,OAAM,SAAU,MAAV,CACJ,GADI,EAEJ,MAFI,EAEU;AAEd,SAAO,OAAO,CAAC,GAAD,EAAM,MAAN,CAAP,CAAqB,IAArB,CAA0B,UAAC,UAAD,EAAW;AAC1C,QAAI,UAAU,YAAY,OAA1B,EAAmC;AACjC,aAAO,UAAP;AACD;;AAED,IAAA,GAAG,CAAC,GAAJ,CAAQ,OAAR,EAAiB,kBAAjB;AACA,IAAA,GAAG,CAAC,KAAJ,CAAU,SAAV,CAAoB,kBAApB;AACA,IAAA,GAAG,CAAC,MAAJ,CAAW,UAAX;AACD,GARM,CAAP;AASD","sourcesContent":["import { Context, ContextCancelation } from '../context'\nimport { Plugin } from '../plugin'\n\nasync function tryOperation(\n  op: () => Context | Promise<Context>\n): Promise<Context> {\n  try {\n    return await op()\n  } catch (err) {\n    return Promise.reject(err)\n  }\n}\n\nexport function attempt(\n  ctx: Context,\n  plugin: Plugin\n): Promise<Context | ContextCancelation | Error | undefined> {\n  ctx.log('debug', 'plugin', { plugin: plugin.name })\n  const start = new Date().getTime()\n\n  const hook = plugin[ctx.event.type]\n  if (hook === undefined) {\n    return Promise.resolve(ctx)\n  }\n\n  const newCtx = tryOperation(() => hook.apply(plugin, [ctx]))\n    .then((ctx) => {\n      const done = new Date().getTime() - start\n      ctx.stats.gauge('plugin_time', done, [`plugin:${plugin.name}`])\n      return ctx\n    })\n    .catch((err) => {\n      if (\n        err instanceof ContextCancelation &&\n        err.type === 'middleware_cancellation'\n      ) {\n        throw err\n      }\n\n      if (err instanceof ContextCancelation) {\n        ctx.log('warn', err.type, {\n          plugin: plugin.name,\n          error: err,\n        })\n\n        return err\n      }\n\n      ctx.log('error', 'plugin Error', {\n        plugin: plugin.name,\n        error: err,\n      })\n\n      ctx.stats.increment('plugin_error', 1, [`plugin:${plugin.name}`])\n      return err as Error\n    })\n\n  return newCtx\n}\n\nexport function ensure(\n  ctx: Context,\n  plugin: Plugin\n): Promise<Context | undefined> {\n  return attempt(ctx, plugin).then((newContext) => {\n    if (newContext instanceof Context) {\n      return newContext\n    }\n\n    ctx.log('debug', 'Context canceled')\n    ctx.stats.increment('context_canceled')\n    ctx.cancel(newContext)\n  })\n}\n"]},"metadata":{},"sourceType":"module"}