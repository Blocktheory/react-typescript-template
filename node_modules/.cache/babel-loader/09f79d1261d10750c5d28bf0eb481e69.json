{"ast":null,"code":"/* eslint-disable getter-return */\nimport { AnalyticsBrowser } from \"@segment/analytics-next\";\nexport const analytics = AnalyticsBrowser.load({\n  writeKey: \"WyeQ5YVlqPdhnZijQrDtxzJKzFZ6IgCl\"\n}); // export const clickEvent = (eventHeader: string, name: string, props: any) => {\n//   window.analytics?.track(eventHeader, {\n//     eventName: name,\n//     ...props,\n//   });\n// };\n// export const setIdentity = (userId: string, name: string, email: string) => {\n//   window.analytics?.identify(userId, {\n//     name: name,\n//     email: email,\n//   });\n// };\n\nexport class SegmentAnalytics {\n  constructor(eventHeader, eventName, props, name, email) {\n    this.eventName = void 0;\n    this.eventHeader = void 0;\n    this.props = void 0;\n    this.name = void 0;\n    this.email = void 0;\n    this.eventHeader = eventHeader;\n    this.eventName = eventName;\n    this.props = props;\n    this.email = email;\n    this.name = name;\n  }\n\n  get event() {\n    if (this.eventName === \"click\") {\n      return this.clickEvent();\n    } else if (this.eventName === \"indentify\") {\n      return this.setIndentify();\n    }\n  }\n\n  clickEvent() {\n    var _window$analytics;\n\n    return (_window$analytics = window.analytics) === null || _window$analytics === void 0 ? void 0 : _window$analytics.track(this.eventHeader, {\n      eventName: this.eventName,\n      ...this.props\n    });\n  }\n\n  setIndentify() {\n    var _window$analytics2;\n\n    return (_window$analytics2 = window.analytics) === null || _window$analytics2 === void 0 ? void 0 : _window$analytics2.identify(this.eventHeader, {\n      name: this.name,\n      email: this.email\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Sites/react-typescript-template/src/Utils.tsx"],"names":["AnalyticsBrowser","analytics","load","writeKey","SegmentAnalytics","constructor","eventHeader","eventName","props","name","email","event","clickEvent","setIndentify","window","track","identify"],"mappings":"AAAA;AACA,SAASA,gBAAT,QAAiC,yBAAjC;AAEA,OAAO,MAAMC,SAAS,GAAGD,gBAAgB,CAACE,IAAjB,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAlB,C,CAEP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAN,CAAuB;AAO5BC,EAAAA,WAAW,CAACC,WAAD,EAAsBC,SAAtB,EAAyCC,KAAzC,EAAsDC,IAAtD,EAAqEC,KAArE,EAAqF;AAAA,SANhGH,SAMgG;AAAA,SALhGD,WAKgG;AAAA,SAJhGE,KAIgG;AAAA,SAHhGC,IAGgG;AAAA,SAFhGC,KAEgG;AAC9F,SAAKJ,WAAL,GAAmBA,WAAnB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKE,KAAL,GAAaA,KAAb;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACD;;AAEQ,MAALE,KAAK,GAAG;AACV,QAAI,KAAKJ,SAAL,KAAmB,OAAvB,EAAgC;AAC9B,aAAO,KAAKK,UAAL,EAAP;AACD,KAFD,MAEO,IAAI,KAAKL,SAAL,KAAmB,WAAvB,EAAoC;AACzC,aAAO,KAAKM,YAAL,EAAP;AACD;AACF;;AAEDD,EAAAA,UAAU,GAAG;AAAA;;AACX,gCAAOE,MAAM,CAACb,SAAd,sDAAO,kBAAkBc,KAAlB,CAAwB,KAAKT,WAA7B,EAAoD;AACzDC,MAAAA,SAAS,EAAE,KAAKA,SADyC;AAEzD,SAAG,KAAKC;AAFiD,KAApD,CAAP;AAID;;AAEDK,EAAAA,YAAY,GAAG;AAAA;;AACb,iCAAOC,MAAM,CAACb,SAAd,uDAAO,mBAAkBe,QAAlB,CAA2B,KAAKV,WAAhC,EAAuD;AAC5DG,MAAAA,IAAI,EAAE,KAAKA,IADiD;AAE5DC,MAAAA,KAAK,EAAE,KAAKA;AAFgD,KAAvD,CAAP;AAID;;AAnC2B","sourcesContent":["/* eslint-disable getter-return */\nimport { AnalyticsBrowser } from \"@segment/analytics-next\";\n\nexport const analytics = AnalyticsBrowser.load({ writeKey: \"WyeQ5YVlqPdhnZijQrDtxzJKzFZ6IgCl\" });\n\n// export const clickEvent = (eventHeader: string, name: string, props: any) => {\n//   window.analytics?.track(eventHeader, {\n//     eventName: name,\n//     ...props,\n//   });\n// };\n\n// export const setIdentity = (userId: string, name: string, email: string) => {\n//   window.analytics?.identify(userId, {\n//     name: name,\n//     email: email,\n//   });\n// };\n\nexport class SegmentAnalytics {\n  eventName: string;\n  eventHeader?: string | null;\n  props?: any;\n  name?: string | null;\n  email?: string | null;\n\n  constructor(eventHeader: string, eventName: string, props?: any, name?: string, email?: string) {\n    this.eventHeader = eventHeader;\n    this.eventName = eventName;\n    this.props = props;\n    this.email = email;\n    this.name = name;\n  }\n\n  get event() {\n    if (this.eventName === \"click\") {\n      return this.clickEvent();\n    } else if (this.eventName === \"indentify\") {\n      return this.setIndentify();\n    }\n  }\n\n  clickEvent() {\n    return window.analytics?.track(this.eventHeader as string, {\n      eventName: this.eventName,\n      ...this.props,\n    });\n  }\n\n  setIndentify() {\n    return window.analytics?.identify(this.eventHeader as string, {\n      name: this.name,\n      email: this.email,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}