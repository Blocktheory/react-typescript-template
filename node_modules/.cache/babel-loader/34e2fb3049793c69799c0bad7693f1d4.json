{"ast":null,"code":"/**\n * Get the current page's canonical URL.\n *\n * @return {string|undefined}\n */\nfunction canonical() {\n  var tags = document.getElementsByTagName('link');\n  var canon = '';\n  Array.prototype.slice.call(tags).forEach(function (tag) {\n    if (tag.getAttribute('rel') === 'canonical') {\n      canon = tag.getAttribute('href');\n    }\n  });\n  return canon;\n}\n/**\n * Return the canonical path for the page.\n */\n\n\nfunction canonicalPath() {\n  var canon = canonical();\n\n  if (!canon) {\n    return window.location.pathname;\n  }\n\n  var a = document.createElement('a');\n  a.href = canon;\n  var pathname = !a.pathname.startsWith('/') ? '/' + a.pathname : a.pathname;\n  return pathname;\n}\n/**\n * Return the canonical URL for the page concat the given `search`\n * and strip the hash.\n */\n\n\nexport function canonicalUrl(search) {\n  if (search === void 0) {\n    search = '';\n  }\n\n  var canon = canonical();\n\n  if (canon) {\n    return canon.includes('?') ? canon : \"\".concat(canon).concat(search);\n  }\n\n  var url = window.location.href;\n  var i = url.indexOf('#');\n  return i === -1 ? url : url.slice(0, i);\n}\n/**\n * Return a default `options.context.page` object.\n *\n * https://segment.com/docs/spec/page/#properties\n */\n\nexport function pageDefaults() {\n  return {\n    path: canonicalPath(),\n    referrer: document.referrer,\n    search: location.search,\n    title: document.title,\n    url: canonicalUrl(location.search)\n  };\n}\n\nfunction enrichPageContext(ctx) {\n  var _a;\n\n  var event = ctx.event;\n  event.context = event.context || {};\n  var pageContext = pageDefaults();\n  var pageProps = (_a = event.properties) !== null && _a !== void 0 ? _a : {};\n  Object.keys(pageContext).forEach(function (key) {\n    if (pageProps[key]) {\n      pageContext[key] = pageProps[key];\n    }\n  });\n\n  if (event.context.page) {\n    pageContext = Object.assign({}, pageContext, event.context.page);\n  }\n\n  event.context = Object.assign({}, event.context, {\n    page: pageContext\n  });\n  ctx.event = event;\n  return ctx;\n}\n\nexport var pageEnrichment = {\n  name: 'Page Enrichment',\n  version: '0.1.0',\n  isLoaded: function () {\n    return true;\n  },\n  load: function () {\n    return Promise.resolve();\n  },\n  type: 'before',\n  page: function (ctx) {\n    ctx.event.properties = Object.assign({}, pageDefaults(), ctx.event.properties);\n\n    if (ctx.event.name) {\n      ctx.event.properties.name = ctx.event.name;\n    }\n\n    return enrichPageContext(ctx);\n  },\n  alias: enrichPageContext,\n  track: enrichPageContext,\n  identify: enrichPageContext,\n  group: enrichPageContext\n};","map":{"version":3,"sources":["/Users/apple/Sites/react-typescript-template/node_modules/@segment/analytics-next/src/plugins/page-enrichment/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Context } from '@/core/context'\nimport type { Plugin } from '@/core/plugin'\n\ninterface PageDefault {\n  [key: string]: unknown\n  path: string\n  referrer: string\n  search: string\n  title: string\n  url: string\n}\n\n/**\n * Get the current page's canonical URL.\n *\n * @return {string|undefined}\n */\nfunction canonical(): string {\n  const tags = document.getElementsByTagName('link')\n  let canon: string | null = ''\n\n  Array.prototype.slice.call(tags).forEach((tag) => {\n    if (tag.getAttribute('rel') === 'canonical') {\n      canon = tag.getAttribute('href')\n    }\n  })\n\n  return canon\n}\n\n/**\n * Return the canonical path for the page.\n */\n\nfunction canonicalPath(): string {\n  const canon = canonical()\n  if (!canon) {\n    return window.location.pathname\n  }\n\n  const a = document.createElement('a')\n  a.href = canon\n  const pathname = !a.pathname.startsWith('/') ? '/' + a.pathname : a.pathname\n\n  return pathname\n}\n\n/**\n * Return the canonical URL for the page concat the given `search`\n * and strip the hash.\n */\n\nexport function canonicalUrl(search = ''): string {\n  const canon = canonical()\n  if (canon) {\n    return canon.includes('?') ? canon : `${canon}${search}`\n  }\n  const url = window.location.href\n  const i = url.indexOf('#')\n  return i === -1 ? url : url.slice(0, i)\n}\n\n/**\n * Return a default `options.context.page` object.\n *\n * https://segment.com/docs/spec/page/#properties\n */\n\nexport function pageDefaults(): PageDefault {\n  return {\n    path: canonicalPath(),\n    referrer: document.referrer,\n    search: location.search,\n    title: document.title,\n    url: canonicalUrl(location.search),\n  }\n}\n\nfunction enrichPageContext(ctx: Context): Context {\n  const event = ctx.event\n  event.context = event.context || {}\n  let pageContext = pageDefaults()\n  const pageProps = event.properties ?? {}\n\n  Object.keys(pageContext).forEach((key) => {\n    if (pageProps[key]) {\n      pageContext[key] = pageProps[key]\n    }\n  })\n\n  if (event.context.page) {\n    pageContext = Object.assign({}, pageContext, event.context.page)\n  }\n\n  event.context = Object.assign({}, event.context, {\n    page: pageContext,\n  })\n\n  ctx.event = event\n\n  return ctx\n}\n\nexport const pageEnrichment: Plugin = {\n  name: 'Page Enrichment',\n  version: '0.1.0',\n  isLoaded: () => true,\n  load: () => Promise.resolve(),\n  type: 'before',\n\n  page: (ctx) => {\n    ctx.event.properties = Object.assign(\n      {},\n      pageDefaults(),\n      ctx.event.properties\n    )\n\n    if (ctx.event.name) {\n      ctx.event.properties.name = ctx.event.name\n    }\n\n    return enrichPageContext(ctx)\n  },\n\n  alias: enrichPageContext,\n  track: enrichPageContext,\n  identify: enrichPageContext,\n  group: enrichPageContext,\n}\n"]},"metadata":{},"sourceType":"module"}