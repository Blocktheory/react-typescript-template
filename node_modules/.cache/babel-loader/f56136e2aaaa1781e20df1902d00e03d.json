{"ast":null,"code":"import { isFunction, isPlainObject, isString, isNumber } from '../../plugins/validation';\n/**\n * Helper for the track method\n */\n\nexport function resolveArguments(eventName, properties, options, callback) {\n  var _a;\n\n  var args = [eventName, properties, options, callback];\n  var name = isPlainObject(eventName) ? eventName.event : eventName;\n\n  if (!name || !isString(name)) {\n    throw new Error('Event missing');\n  }\n\n  var data = isPlainObject(eventName) ? (_a = eventName.properties) !== null && _a !== void 0 ? _a : {} : isPlainObject(properties) ? properties : {};\n  var opts = {};\n\n  if (isPlainObject(properties) && !isFunction(options)) {\n    opts = options !== null && options !== void 0 ? options : {};\n  }\n\n  if (isPlainObject(eventName) && !isFunction(properties)) {\n    opts = properties !== null && properties !== void 0 ? properties : {};\n  }\n\n  var cb = args.find(isFunction);\n  return [name, data, opts, cb];\n}\n/**\n * Helper for page, screen methods\n */\n\nexport function resolvePageArguments(category, name, properties, options, callback) {\n  var _a, _b;\n\n  var resolvedCategory = null;\n  var resolvedName = null;\n  var args = [category, name, properties, options, callback];\n  var strings = args.filter(isString);\n\n  if (strings[0] !== undefined && strings[1] !== undefined) {\n    resolvedCategory = strings[0];\n    resolvedName = strings[1];\n  }\n\n  if (strings.length === 1) {\n    resolvedCategory = null;\n    resolvedName = strings[0];\n  }\n\n  var resolvedCallback = args.find(isFunction);\n  var objects = args.filter(function (obj) {\n    if (resolvedName === null) {\n      return isPlainObject(obj);\n    }\n\n    return isPlainObject(obj) || obj === null;\n  });\n  var resolvedProperties = (_a = objects[0]) !== null && _a !== void 0 ? _a : {};\n  var resolvedOptions = (_b = objects[1]) !== null && _b !== void 0 ? _b : {};\n  return [resolvedCategory, resolvedName, resolvedProperties, resolvedOptions, resolvedCallback];\n}\n/**\n * Helper for group, identify methods\n */\n\nexport var resolveUserArguments = function (user) {\n  return function () {\n    var _a, _b, _c, _d, _e;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var id = null;\n    id = (_c = (_a = args.find(isString)) !== null && _a !== void 0 ? _a : (_b = args.find(isNumber)) === null || _b === void 0 ? void 0 : _b.toString()) !== null && _c !== void 0 ? _c : user.id();\n    var objects = args.filter(function (obj) {\n      if (id === null) {\n        return isPlainObject(obj);\n      }\n\n      return isPlainObject(obj) || obj === null;\n    });\n    var traits = (_d = objects[0]) !== null && _d !== void 0 ? _d : {};\n    var opts = (_e = objects[1]) !== null && _e !== void 0 ? _e : {};\n    var resolvedCallback = args.find(isFunction);\n    return [id, traits, opts, resolvedCallback];\n  };\n};\n/**\n * Helper for alias method\n */\n\nexport function resolveAliasArguments(to, from, options, callback) {\n  if (isNumber(to)) to = to.toString(); // Legacy behaviour - allow integers for alias calls\n\n  if (isNumber(from)) from = from.toString();\n  var args = [to, from, options, callback];\n\n  var _a = args.filter(isString),\n      _b = _a[0],\n      aliasTo = _b === void 0 ? to : _b,\n      _c = _a[1],\n      aliasFrom = _c === void 0 ? null : _c;\n\n  var _d = args.filter(isPlainObject)[0],\n      opts = _d === void 0 ? {} : _d;\n  var resolvedCallback = args.find(isFunction);\n  return [aliasTo, aliasFrom, opts, resolvedCallback];\n}","map":{"version":3,"sources":["/Users/apple/Sites/react-typescript-template/node_modules/@segment/analytics-next/src/core/arguments-resolver/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  isFunction,\n  isPlainObject,\n  isString,\n  isNumber,\n} from '../../plugins/validation'\nimport { Context } from '../context'\nimport {\n  Callback,\n  JSONObject,\n  Options,\n  EventProperties,\n  SegmentEvent,\n  Traits,\n} from '../events'\nimport { ID, User } from '../user'\n\n/**\n * Helper for the track method\n */\nexport function resolveArguments(\n  eventName: string | SegmentEvent,\n  properties?: EventProperties | Callback,\n  options?: Options | Callback,\n  callback?: Callback\n): [string, EventProperties | Callback, Options, Callback | undefined] {\n  const args = [eventName, properties, options, callback]\n\n  const name = isPlainObject(eventName) ? eventName.event : eventName\n  if (!name || !isString(name)) {\n    throw new Error('Event missing')\n  }\n\n  const data = isPlainObject(eventName)\n    ? eventName.properties ?? {}\n    : isPlainObject(properties)\n    ? properties\n    : {}\n\n  let opts: Options = {}\n  if (isPlainObject(properties) && !isFunction(options)) {\n    opts = options ?? {}\n  }\n\n  if (isPlainObject(eventName) && !isFunction(properties)) {\n    opts = properties ?? {}\n  }\n\n  const cb = args.find(isFunction) as Callback | undefined\n  return [name, data, opts, cb]\n}\n\n/**\n * Helper for page, screen methods\n */\nexport function resolvePageArguments(\n  category?: string | object,\n  name?: string | object | Callback,\n  properties?: EventProperties | Options | Callback | null,\n  options?: Options | Callback,\n  callback?: Callback\n): [\n  string | null,\n  string | null,\n  EventProperties,\n  Options,\n  Callback | undefined\n] {\n  let resolvedCategory: string | undefined | null = null\n  let resolvedName: string | undefined | null = null\n  const args = [category, name, properties, options, callback]\n\n  const strings = args.filter(isString)\n  if (strings[0] !== undefined && strings[1] !== undefined) {\n    resolvedCategory = strings[0]\n    resolvedName = strings[1]\n  }\n\n  if (strings.length === 1) {\n    resolvedCategory = null\n    resolvedName = strings[0]\n  }\n\n  const resolvedCallback = args.find(isFunction) as Callback | undefined\n\n  const objects = args.filter((obj) => {\n    if (resolvedName === null) {\n      return isPlainObject(obj)\n    }\n    return isPlainObject(obj) || obj === null\n  }) as Array<JSONObject | null>\n\n  const resolvedProperties = (objects[0] ?? {}) as EventProperties\n  const resolvedOptions = (objects[1] ?? {}) as Options\n\n  return [\n    resolvedCategory,\n    resolvedName,\n    resolvedProperties,\n    resolvedOptions,\n    resolvedCallback,\n  ]\n}\n\n/**\n * Helper for group, identify methods\n */\nexport const resolveUserArguments = (user: User): ResolveUser => {\n  return (...args): ReturnType<ResolveUser> => {\n    let id: string | ID | null = null\n    id = args.find(isString) ?? args.find(isNumber)?.toString() ?? user.id()\n\n    const objects = args.filter((obj) => {\n      if (id === null) {\n        return isPlainObject(obj)\n      }\n      return isPlainObject(obj) || obj === null\n    }) as Array<Traits | null>\n\n    const traits = (objects[0] ?? {}) as Traits\n    const opts = (objects[1] ?? {}) as Options\n\n    const resolvedCallback = args.find(isFunction) as Callback | undefined\n\n    return [id, traits, opts, resolvedCallback]\n  }\n}\n\n/**\n * Helper for alias method\n */\nexport function resolveAliasArguments(\n  to: string | number,\n  from?: string | number | Options,\n  options?: Options | Callback,\n  callback?: Callback\n): [string, string | null, Options, Callback | undefined] {\n  if (isNumber(to)) to = to.toString() // Legacy behaviour - allow integers for alias calls\n  if (isNumber(from)) from = from.toString()\n  const args = [to, from, options, callback]\n\n  const [aliasTo = to, aliasFrom = null] = args.filter(isString)\n  const [opts = {}] = args.filter(isPlainObject)\n  const resolvedCallback = args.find(isFunction) as Callback | undefined\n\n  return [aliasTo, aliasFrom, opts, resolvedCallback]\n}\n\ntype ResolveUser = (\n  id?: ID | object,\n  traits?: Traits | Callback | null,\n  options?: Options | Callback,\n  callback?: Callback\n) => [ID, Traits, Options, Callback | undefined]\n\nexport type UserParams = Parameters<ResolveUser>\nexport type EventParams = Parameters<typeof resolveArguments>\nexport type PageParams = Parameters<typeof resolvePageArguments>\nexport type AliasParams = Parameters<typeof resolveAliasArguments>\n\nexport type DispatchedEvent = Context\n"]},"metadata":{},"sourceType":"module"}