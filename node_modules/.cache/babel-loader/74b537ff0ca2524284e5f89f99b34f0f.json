{"ast":null,"code":"import { __assign, __awaiter, __extends, __generator, __spreadArray } from \"tslib\";\nimport { getProcessEnv } from '../lib/get-process-env';\nimport { getCDN, setGlobalCDNUrl } from '../lib/parse-cdn';\nimport fetch from 'unfetch';\nimport { Analytics } from '../core/analytics';\nimport { Context } from '../core/context';\nimport { mergedOptions } from '../lib/merged-options';\nimport { pageEnrichment } from '../plugins/page-enrichment';\nimport { remoteLoader } from '../plugins/remote-loader';\nimport { segmentio } from '../plugins/segmentio';\nimport { validation } from '../plugins/validation';\nimport { AnalyticsBuffered, flushAnalyticsCallsInNewTask, flushAddSourceMiddleware, flushSetAnonymousID, flushOn } from '../core/buffer';\nimport { popSnippetWindowBuffer } from '../core/buffer/snippet';\nexport function loadLegacySettings(writeKey, cdnURL) {\n  var baseUrl = cdnURL !== null && cdnURL !== void 0 ? cdnURL : getCDN();\n  return fetch(\"\".concat(baseUrl, \"/v1/projects/\").concat(writeKey, \"/settings\")).then(function (res) {\n    if (!res.ok) {\n      return res.text().then(function (errorResponseMessage) {\n        throw new Error(errorResponseMessage);\n      });\n    }\n\n    return res.json();\n  }).catch(function (err) {\n    console.error(err.message);\n    throw err;\n  });\n}\n\nfunction hasLegacyDestinations(settings) {\n  return getProcessEnv().NODE_ENV !== 'test' && // just one integration means segmentio\n  Object.keys(settings.integrations).length > 1;\n}\n/**\n * With AJS classic, we allow users to call setAnonymousId before the library initialization.\n * This is important because some of the destinations will use the anonymousId during the initialization,\n * and if we set anonId afterwards, that wouldnâ€™t impact the destination.\n *\n * Also Ensures events can be registered before library initialization.\n * This is important so users can register to 'initialize' and any events that may fire early during setup.\n */\n\n\nfunction flushPreBuffer(analytics, buffer) {\n  buffer.push.apply(buffer, popSnippetWindowBuffer());\n  flushSetAnonymousID(analytics, buffer);\n  flushOn(analytics, buffer);\n}\n/**\n * Finish flushing buffer and cleanup.\n */\n\n\nfunction flushFinalBuffer(analytics, buffer) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          // Call popSnippetWindowBuffer before each flush task since there may be\n          // analytics calls during async function calls.\n          buffer.push.apply(buffer, popSnippetWindowBuffer());\n          return [4\n          /*yield*/\n          , flushAddSourceMiddleware(analytics, buffer)];\n\n        case 1:\n          _a.sent();\n\n          buffer.push.apply(buffer, popSnippetWindowBuffer());\n          flushAnalyticsCallsInNewTask(analytics, buffer); // Clear buffer, just in case analytics is loaded twice; we don't want to fire events off again.\n\n          buffer.clear();\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nfunction registerPlugins(legacySettings, analytics, opts, options, plugins) {\n  var _a, _b, _c;\n\n  return __awaiter(this, void 0, void 0, function () {\n    var legacyDestinations, _d, schemaFilter, _e, mergedSettings, remotePlugins, toRegister, shouldIgnoreSegmentio, ctx;\n\n    var _this = this;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          if (!hasLegacyDestinations(legacySettings)) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , import(\n          /* webpackChunkName: \"ajs-destination\" */\n          '../plugins/ajs-destination').then(function (mod) {\n            return mod.ajsDestinations(legacySettings, analytics.integrations, opts);\n          })];\n\n        case 1:\n          _d = _f.sent();\n          return [3\n          /*break*/\n          , 3];\n\n        case 2:\n          _d = [];\n          _f.label = 3;\n\n        case 3:\n          legacyDestinations = _d;\n          if (!legacySettings.legacyVideoPluginsEnabled) return [3\n          /*break*/\n          , 5];\n          return [4\n          /*yield*/\n          , import(\n          /* webpackChunkName: \"legacyVideos\" */\n          '../plugins/legacy-video-plugins').then(function (mod) {\n            return mod.loadLegacyVideoPlugins(analytics);\n          })];\n\n        case 4:\n          _f.sent();\n\n          _f.label = 5;\n\n        case 5:\n          if (!((_a = opts.plan) === null || _a === void 0 ? void 0 : _a.track)) return [3\n          /*break*/\n          , 7];\n          return [4\n          /*yield*/\n          , import(\n          /* webpackChunkName: \"schemaFilter\" */\n          '../plugins/schema-filter').then(function (mod) {\n            var _a;\n\n            return mod.schemaFilter((_a = opts.plan) === null || _a === void 0 ? void 0 : _a.track, legacySettings);\n          })];\n\n        case 6:\n          _e = _f.sent();\n          return [3\n          /*break*/\n          , 8];\n\n        case 7:\n          _e = undefined;\n          _f.label = 8;\n\n        case 8:\n          schemaFilter = _e;\n          mergedSettings = mergedOptions(legacySettings, options);\n          return [4\n          /*yield*/\n          , remoteLoader(legacySettings, analytics.integrations, mergedSettings, options.obfuscate).catch(function () {\n            return [];\n          })];\n\n        case 9:\n          remotePlugins = _f.sent();\n          toRegister = __spreadArray(__spreadArray(__spreadArray([validation, pageEnrichment], plugins, true), legacyDestinations, true), remotePlugins, true);\n\n          if (schemaFilter) {\n            toRegister.push(schemaFilter);\n          }\n\n          shouldIgnoreSegmentio = ((_b = opts.integrations) === null || _b === void 0 ? void 0 : _b.All) === false && !opts.integrations['Segment.io'] || opts.integrations && opts.integrations['Segment.io'] === false;\n\n          if (!shouldIgnoreSegmentio) {\n            toRegister.push(segmentio(analytics, mergedSettings['Segment.io'], legacySettings.integrations));\n          }\n\n          return [4\n          /*yield*/\n          , analytics.register.apply(analytics, toRegister)];\n\n        case 10:\n          ctx = _f.sent();\n          if (!Object.entries((_c = legacySettings.enabledMiddleware) !== null && _c !== void 0 ? _c : {}).some(function (_a) {\n            var enabled = _a[1];\n            return enabled;\n          })) return [3\n          /*break*/\n          , 12];\n          return [4\n          /*yield*/\n          , import(\n          /* webpackChunkName: \"remoteMiddleware\" */\n          '../plugins/remote-middleware').then(function (_a) {\n            var remoteMiddlewares = _a.remoteMiddlewares;\n            return __awaiter(_this, void 0, void 0, function () {\n              var middleware, promises;\n              return __generator(this, function (_b) {\n                switch (_b.label) {\n                  case 0:\n                    return [4\n                    /*yield*/\n                    , remoteMiddlewares(ctx, legacySettings, options.obfuscate)];\n\n                  case 1:\n                    middleware = _b.sent();\n                    promises = middleware.map(function (mdw) {\n                      return analytics.addSourceMiddleware(mdw);\n                    });\n                    return [2\n                    /*return*/\n                    , Promise.all(promises)];\n                }\n              });\n            });\n          })];\n\n        case 11:\n          _f.sent();\n\n          _f.label = 12;\n\n        case 12:\n          return [2\n          /*return*/\n          , ctx];\n      }\n    });\n  });\n}\n\nfunction loadAnalytics(settings, options, preInitBuffer) {\n  var _a, _b, _c, _d, _e, _f;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var legacySettings, _g, retryQueue, opts, analytics, plugins, ctx, search, hash, term;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          // this is an ugly side-effect, but it's for the benefits of the plugins that get their cdn via getCDN()\n          if (settings.cdnURL) setGlobalCDNUrl(settings.cdnURL);\n          if (!((_a = settings.cdnSettings) !== null && _a !== void 0)) return [3\n          /*break*/\n          , 1];\n          _g = _a;\n          return [3\n          /*break*/\n          , 3];\n\n        case 1:\n          return [4\n          /*yield*/\n          , loadLegacySettings(settings.writeKey, settings.cdnURL)];\n\n        case 2:\n          _g = _h.sent();\n          _h.label = 3;\n\n        case 3:\n          legacySettings = _g;\n          retryQueue = (_c = (_b = legacySettings.integrations['Segment.io']) === null || _b === void 0 ? void 0 : _b.retryQueue) !== null && _c !== void 0 ? _c : true;\n          opts = __assign({\n            retryQueue: retryQueue\n          }, options);\n          analytics = new Analytics(settings, opts);\n          plugins = (_d = settings.plugins) !== null && _d !== void 0 ? _d : [];\n          Context.initMetrics(legacySettings.metrics); // needs to be flushed before plugins are registered\n\n          flushPreBuffer(analytics, preInitBuffer);\n          return [4\n          /*yield*/\n          , registerPlugins(legacySettings, analytics, opts, options, plugins)];\n\n        case 4:\n          ctx = _h.sent();\n          search = (_e = window.location.search) !== null && _e !== void 0 ? _e : '';\n          hash = (_f = window.location.hash) !== null && _f !== void 0 ? _f : '';\n          term = search.length ? search : hash.replace(/(?=#).*(?=\\?)/, '');\n          if (!term.includes('ajs_')) return [3\n          /*break*/\n          , 6];\n          return [4\n          /*yield*/\n          , analytics.queryString(term).catch(console.error)];\n\n        case 5:\n          _h.sent();\n\n          _h.label = 6;\n\n        case 6:\n          analytics.initialized = true;\n          analytics.emit('initialize', settings, options);\n\n          if (options.initialPageview) {\n            analytics.page().catch(console.error);\n          }\n\n          return [4\n          /*yield*/\n          , flushFinalBuffer(analytics, preInitBuffer)];\n\n        case 7:\n          _h.sent();\n\n          return [2\n          /*return*/\n          , [analytics, ctx]];\n      }\n    });\n  });\n}\n/**\n * The public browser interface for this package.\n * Use AnalyticsBrowser.load to create an instance.\n */\n\n\nvar AnalyticsBrowser =\n/** @class */\nfunction (_super) {\n  __extends(AnalyticsBrowser, _super);\n\n  function AnalyticsBrowser(loader) {\n    return _super.call(this, loader) || this;\n  }\n  /**\n   * Instantiates an object exposing Analytics methods.\n   *\n   * ```ts\n   * const ajs = AnalyticsBrowser.load({ writeKey: '<YOUR_WRITE_KEY>' })\n   *\n   * ajs.track(\"foo\")\n   * ...\n   * ```\n   */\n\n\n  AnalyticsBrowser.load = function (settings, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return new this(function (preInitBuffer) {\n      return loadAnalytics(settings, options, preInitBuffer);\n    });\n  };\n\n  AnalyticsBrowser.standalone = function (writeKey, options) {\n    return AnalyticsBrowser.load({\n      writeKey: writeKey\n    }, options).then(function (res) {\n      return res[0];\n    });\n  };\n\n  return AnalyticsBrowser;\n}(AnalyticsBuffered);\n\nexport { AnalyticsBrowser };","map":{"version":3,"sources":["/Users/apple/Sites/react-typescript-template/node_modules/@segment/analytics-next/src/browser/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { getProcessEnv } from '../lib/get-process-env'\nimport { getCDN, setGlobalCDNUrl } from '../lib/parse-cdn'\n\nimport fetch from 'unfetch'\nimport { Analytics, AnalyticsSettings, InitOptions } from '../core/analytics'\nimport { Context } from '../core/context'\nimport { Plan } from '../core/events'\nimport { Plugin } from '../core/plugin'\nimport { MetricsOptions } from '../core/stats/remote-metrics'\nimport { mergedOptions } from '../lib/merged-options'\nimport { pageEnrichment } from '../plugins/page-enrichment'\nimport { remoteLoader, RemotePlugin } from '../plugins/remote-loader'\nimport type { RoutingRule } from '../plugins/routing-middleware'\nimport { segmentio, SegmentioSettings } from '../plugins/segmentio'\nimport { validation } from '../plugins/validation'\nimport {\n  AnalyticsBuffered,\n  PreInitMethodCallBuffer,\n  flushAnalyticsCallsInNewTask,\n  flushAddSourceMiddleware,\n  AnalyticsLoader,\n  flushSetAnonymousID,\n  flushOn,\n} from '../core/buffer'\nimport { popSnippetWindowBuffer } from '../core/buffer/snippet'\n\nexport interface LegacyIntegrationConfiguration {\n  /* @deprecated - This does not indicate browser types anymore */\n  type?: string\n\n  versionSettings?: {\n    version?: string\n    override?: string\n    componentTypes?: Array<'browser' | 'android' | 'ios' | 'server'>\n  }\n\n  bundlingStatus?: string\n\n  // Segment.io specific\n  retryQueue?: boolean\n\n  // any extra unknown settings\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any\n}\n\nexport interface LegacySettings {\n  integrations: {\n    [name: string]: LegacyIntegrationConfiguration\n  }\n\n  middlewareSettings?: {\n    routingRules: RoutingRule[]\n  }\n\n  enabledMiddleware?: Record<string, boolean>\n  metrics?: MetricsOptions\n\n  plan?: Plan\n\n  legacyVideoPluginsEnabled?: boolean\n\n  remotePlugins?: RemotePlugin[]\n}\n\nexport interface AnalyticsBrowserSettings extends AnalyticsSettings {\n  /**\n   * The settings for the Segment Source.\n   * If provided, `AnalyticsBrowser` will not fetch remote settings\n   * for the source.\n   */\n  cdnSettings?: LegacySettings & Record<string, unknown>\n  /**\n   * If provided, will override the default Segment CDN (https://cdn.segment.com) for this application.\n   */\n  cdnURL?: string\n}\n\nexport function loadLegacySettings(\n  writeKey: string,\n  cdnURL?: string\n): Promise<LegacySettings> {\n  const baseUrl = cdnURL ?? getCDN()\n\n  return fetch(`${baseUrl}/v1/projects/${writeKey}/settings`)\n    .then((res) => {\n      if (!res.ok) {\n        return res.text().then((errorResponseMessage) => {\n          throw new Error(errorResponseMessage)\n        })\n      }\n      return res.json()\n    })\n    .catch((err) => {\n      console.error(err.message)\n      throw err\n    })\n}\n\nfunction hasLegacyDestinations(settings: LegacySettings): boolean {\n  return (\n    getProcessEnv().NODE_ENV !== 'test' &&\n    // just one integration means segmentio\n    Object.keys(settings.integrations).length > 1\n  )\n}\n\n/**\n * With AJS classic, we allow users to call setAnonymousId before the library initialization.\n * This is important because some of the destinations will use the anonymousId during the initialization,\n * and if we set anonId afterwards, that wouldnâ€™t impact the destination.\n *\n * Also Ensures events can be registered before library initialization.\n * This is important so users can register to 'initialize' and any events that may fire early during setup.\n */\nfunction flushPreBuffer(\n  analytics: Analytics,\n  buffer: PreInitMethodCallBuffer\n): void {\n  buffer.push(...popSnippetWindowBuffer())\n  flushSetAnonymousID(analytics, buffer)\n  flushOn(analytics, buffer)\n}\n\n/**\n * Finish flushing buffer and cleanup.\n */\nasync function flushFinalBuffer(\n  analytics: Analytics,\n  buffer: PreInitMethodCallBuffer\n): Promise<void> {\n  // Call popSnippetWindowBuffer before each flush task since there may be\n  // analytics calls during async function calls.\n  buffer.push(...popSnippetWindowBuffer())\n  await flushAddSourceMiddleware(analytics, buffer)\n  buffer.push(...popSnippetWindowBuffer())\n  flushAnalyticsCallsInNewTask(analytics, buffer)\n  // Clear buffer, just in case analytics is loaded twice; we don't want to fire events off again.\n  buffer.clear()\n}\n\nasync function registerPlugins(\n  legacySettings: LegacySettings,\n  analytics: Analytics,\n  opts: InitOptions,\n  options: InitOptions,\n  plugins: Plugin[]\n): Promise<Context> {\n  const legacyDestinations = hasLegacyDestinations(legacySettings)\n    ? await import(\n        /* webpackChunkName: \"ajs-destination\" */ '../plugins/ajs-destination'\n      ).then((mod) => {\n        return mod.ajsDestinations(legacySettings, analytics.integrations, opts)\n      })\n    : []\n\n  if (legacySettings.legacyVideoPluginsEnabled) {\n    await import(\n      /* webpackChunkName: \"legacyVideos\" */ '../plugins/legacy-video-plugins'\n    ).then((mod) => {\n      return mod.loadLegacyVideoPlugins(analytics)\n    })\n  }\n\n  const schemaFilter = opts.plan?.track\n    ? await import(\n        /* webpackChunkName: \"schemaFilter\" */ '../plugins/schema-filter'\n      ).then((mod) => {\n        return mod.schemaFilter(opts.plan?.track, legacySettings)\n      })\n    : undefined\n\n  const mergedSettings = mergedOptions(legacySettings, options)\n  const remotePlugins = await remoteLoader(\n    legacySettings,\n    analytics.integrations,\n    mergedSettings,\n    options.obfuscate\n  ).catch(() => [])\n\n  const toRegister = [\n    validation,\n    pageEnrichment,\n    ...plugins,\n    ...legacyDestinations,\n    ...remotePlugins,\n  ]\n\n  if (schemaFilter) {\n    toRegister.push(schemaFilter)\n  }\n\n  const shouldIgnoreSegmentio =\n    (opts.integrations?.All === false && !opts.integrations['Segment.io']) ||\n    (opts.integrations && opts.integrations['Segment.io'] === false)\n\n  if (!shouldIgnoreSegmentio) {\n    toRegister.push(\n      segmentio(\n        analytics,\n        mergedSettings['Segment.io'] as SegmentioSettings,\n        legacySettings.integrations\n      )\n    )\n  }\n\n  const ctx = await analytics.register(...toRegister)\n\n  if (\n    Object.entries(legacySettings.enabledMiddleware ?? {}).some(\n      ([, enabled]) => enabled\n    )\n  ) {\n    await import(\n      /* webpackChunkName: \"remoteMiddleware\" */ '../plugins/remote-middleware'\n    ).then(async ({ remoteMiddlewares }) => {\n      const middleware = await remoteMiddlewares(\n        ctx,\n        legacySettings,\n        options.obfuscate\n      )\n      const promises = middleware.map((mdw) =>\n        analytics.addSourceMiddleware(mdw)\n      )\n      return Promise.all(promises)\n    })\n  }\n\n  return ctx\n}\n\nasync function loadAnalytics(\n  settings: AnalyticsBrowserSettings,\n  options: InitOptions = {},\n  preInitBuffer: PreInitMethodCallBuffer\n): Promise<[Analytics, Context]> {\n  // this is an ugly side-effect, but it's for the benefits of the plugins that get their cdn via getCDN()\n  if (settings.cdnURL) setGlobalCDNUrl(settings.cdnURL)\n\n  const legacySettings =\n    settings.cdnSettings ??\n    (await loadLegacySettings(settings.writeKey, settings.cdnURL))\n\n  const retryQueue: boolean =\n    legacySettings.integrations['Segment.io']?.retryQueue ?? true\n\n  const opts: InitOptions = { retryQueue, ...options }\n  const analytics = new Analytics(settings, opts)\n\n  const plugins = settings.plugins ?? []\n  Context.initMetrics(legacySettings.metrics)\n\n  // needs to be flushed before plugins are registered\n  flushPreBuffer(analytics, preInitBuffer)\n\n  const ctx = await registerPlugins(\n    legacySettings,\n    analytics,\n    opts,\n    options,\n    plugins\n  )\n\n  const search = window.location.search ?? ''\n  const hash = window.location.hash ?? ''\n\n  const term = search.length ? search : hash.replace(/(?=#).*(?=\\?)/, '')\n\n  if (term.includes('ajs_')) {\n    await analytics.queryString(term).catch(console.error)\n  }\n\n  analytics.initialized = true\n  analytics.emit('initialize', settings, options)\n\n  if (options.initialPageview) {\n    analytics.page().catch(console.error)\n  }\n\n  await flushFinalBuffer(analytics, preInitBuffer)\n\n  return [analytics, ctx]\n}\n\n/**\n * The public browser interface for this package.\n * Use AnalyticsBrowser.load to create an instance.\n */\nexport class AnalyticsBrowser extends AnalyticsBuffered {\n  private constructor(loader: AnalyticsLoader) {\n    super(loader)\n  }\n\n  /**\n   * Instantiates an object exposing Analytics methods.\n   *\n   * ```ts\n   * const ajs = AnalyticsBrowser.load({ writeKey: '<YOUR_WRITE_KEY>' })\n   *\n   * ajs.track(\"foo\")\n   * ...\n   * ```\n   */\n  static load(\n    settings: AnalyticsBrowserSettings,\n    options: InitOptions = {}\n  ): AnalyticsBrowser {\n    return new this((preInitBuffer) =>\n      loadAnalytics(settings, options, preInitBuffer)\n    )\n  }\n\n  static standalone(\n    writeKey: string,\n    options?: InitOptions\n  ): Promise<Analytics> {\n    return AnalyticsBrowser.load({ writeKey }, options).then((res) => res[0])\n  }\n}\n"]},"metadata":{},"sourceType":"module"}