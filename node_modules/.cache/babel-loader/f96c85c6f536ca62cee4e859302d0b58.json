{"ast":null,"code":"import { __extends } from \"tslib\";\nexport function isString(obj) {\n  return typeof obj === 'string';\n}\nexport function isNumber(obj) {\n  return typeof obj === 'number';\n}\nexport function isFunction(obj) {\n  return typeof obj === 'function';\n}\nexport function isPlainObject(obj) {\n  return Object.prototype.toString.call(obj).slice(8, -1).toLowerCase() === 'object';\n}\n\nfunction hasUser(event) {\n  var _a, _b, _c;\n\n  var id = (_c = (_b = (_a = event.userId) !== null && _a !== void 0 ? _a : event.anonymousId) !== null && _b !== void 0 ? _b : event.groupId) !== null && _c !== void 0 ? _c : event.previousId;\n  return isString(id);\n}\n\nvar ValidationError =\n/** @class */\nfunction (_super) {\n  __extends(ValidationError, _super);\n\n  function ValidationError(field, message) {\n    var _this = _super.call(this, message) || this;\n\n    _this.field = field;\n    return _this;\n  }\n\n  return ValidationError;\n}(Error);\n\nfunction validate(ctx) {\n  var _a;\n\n  var eventType = ctx && ctx.event && ctx.event.type;\n  var event = ctx.event;\n\n  if (event === undefined) {\n    throw new ValidationError('event', 'Event is missing');\n  }\n\n  if (!isString(eventType)) {\n    throw new ValidationError('event', 'Event is not a string');\n  }\n\n  if (eventType === 'track' && !isString(event.event)) {\n    throw new ValidationError('event', 'Event is not a string');\n  }\n\n  var props = (_a = event.properties) !== null && _a !== void 0 ? _a : event.traits;\n\n  if (eventType !== 'alias' && !isPlainObject(props)) {\n    throw new ValidationError('properties', 'properties is not an object');\n  }\n\n  if (!hasUser(event)) {\n    throw new ValidationError('userId', 'Missing userId or anonymousId');\n  }\n\n  return ctx;\n}\n\nexport var validation = {\n  name: 'Event Validation',\n  type: 'before',\n  version: '1.0.0',\n  isLoaded: function () {\n    return true;\n  },\n  load: function () {\n    return Promise.resolve();\n  },\n  track: validate,\n  identify: validate,\n  page: validate,\n  alias: validate,\n  group: validate,\n  screen: validate\n};","map":{"version":3,"sources":["/Users/apple/Sites/react-typescript-template/node_modules/@segment/analytics-next/src/plugins/validation/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Plugin } from '../../core/plugin'\nimport type { SegmentEvent } from '../../core/events'\nimport type { Context } from '../../core/context'\n\nexport function isString(obj: unknown): obj is string {\n  return typeof obj === 'string'\n}\n\nexport function isNumber(obj: unknown): obj is number {\n  return typeof obj === 'number'\n}\n\nexport function isFunction(obj: unknown): obj is Function {\n  return typeof obj === 'function'\n}\n\nexport function isPlainObject(\n  obj: unknown\n): obj is Record<string | symbol | number, any> {\n  return (\n    Object.prototype.toString.call(obj).slice(8, -1).toLowerCase() === 'object'\n  )\n}\n\nfunction hasUser(event: SegmentEvent): boolean {\n  const id =\n    event.userId ?? event.anonymousId ?? event.groupId ?? event.previousId\n  return isString(id)\n}\n\nclass ValidationError extends Error {\n  field: string\n\n  constructor(field: string, message: string) {\n    super(message)\n    this.field = field\n  }\n}\n\nfunction validate(ctx: Context): Context {\n  const eventType: unknown = ctx && ctx.event && ctx.event.type\n  const event = ctx.event\n\n  if (event === undefined) {\n    throw new ValidationError('event', 'Event is missing')\n  }\n\n  if (!isString(eventType)) {\n    throw new ValidationError('event', 'Event is not a string')\n  }\n\n  if (eventType === 'track' && !isString(event.event)) {\n    throw new ValidationError('event', 'Event is not a string')\n  }\n\n  const props = event.properties ?? event.traits\n  if (eventType !== 'alias' && !isPlainObject(props)) {\n    throw new ValidationError('properties', 'properties is not an object')\n  }\n\n  if (!hasUser(event)) {\n    throw new ValidationError('userId', 'Missing userId or anonymousId')\n  }\n\n  return ctx\n}\n\nexport const validation: Plugin = {\n  name: 'Event Validation',\n  type: 'before',\n  version: '1.0.0',\n\n  isLoaded: () => true,\n  load: () => Promise.resolve(),\n\n  track: validate,\n  identify: validate,\n  page: validate,\n  alias: validate,\n  group: validate,\n  screen: validate,\n}\n"]},"metadata":{},"sourceType":"module"}