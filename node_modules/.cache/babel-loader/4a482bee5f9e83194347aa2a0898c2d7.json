{"ast":null,"code":"import { __assign } from \"tslib\";\nimport jar from 'js-cookie';\nimport { gracefulDecodeURIComponent } from '../../core/query-string/gracefulDecodeURIComponent';\nimport { tld } from '../../core/user/tld';\nimport { version } from '../../generated/version';\nvar cookieOptions;\n\nfunction getCookieOptions() {\n  if (cookieOptions) {\n    return cookieOptions;\n  }\n\n  var domain = tld(window.location.href);\n  cookieOptions = {\n    expires: 31536000000,\n    secure: false,\n    path: '/'\n  };\n\n  if (domain) {\n    cookieOptions.domain = domain;\n  }\n\n  return cookieOptions;\n} // Default value will be updated to 'web' in `bundle-umd.ts` for web build.\n\n\nvar _version = 'npm';\nexport function setVersionType(version) {\n  _version = version;\n}\nexport function getVersionType() {\n  return _version;\n}\nexport function ampId() {\n  var ampId = jar.get('_ga');\n\n  if (ampId && ampId.startsWith('amp')) {\n    return ampId;\n  }\n}\nexport function utm(query) {\n  if (query.startsWith('?')) {\n    query = query.substring(1);\n  }\n\n  query = query.replace(/\\?/g, '&');\n  return query.split('&').reduce(function (acc, str) {\n    var _a = str.split('='),\n        k = _a[0],\n        _b = _a[1],\n        v = _b === void 0 ? '' : _b;\n\n    if (k.includes('utm_') && k.length > 4) {\n      var utmParam = k.substr(4);\n\n      if (utmParam === 'campaign') {\n        utmParam = 'name';\n      }\n\n      acc[utmParam] = gracefulDecodeURIComponent(v);\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction ads(query) {\n  var queryIds = {\n    btid: 'dataxu',\n    urid: 'millennial-media'\n  };\n\n  if (query.startsWith('?')) {\n    query = query.substring(1);\n  }\n\n  query = query.replace(/\\?/g, '&');\n  var parts = query.split('&');\n\n  for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n    var part = parts_1[_i];\n\n    var _a = part.split('='),\n        k = _a[0],\n        v = _a[1];\n\n    if (queryIds[k]) {\n      return {\n        id: v,\n        type: queryIds[k]\n      };\n    }\n  }\n}\n\nfunction referrerId(query, ctx, disablePersistance) {\n  var stored = jar.get('s:context.referrer');\n  var ad = ads(query);\n  stored = stored ? JSON.parse(stored) : undefined;\n  ad = ad !== null && ad !== void 0 ? ad : stored;\n\n  if (!ad) {\n    return;\n  }\n\n  if (ctx) {\n    ctx.referrer = __assign(__assign({}, ctx.referrer), ad);\n  }\n\n  if (!disablePersistance) {\n    jar.set('s:context.referrer', JSON.stringify(ad), getCookieOptions());\n  }\n}\n\nexport function normalize(analytics, json, settings, integrations) {\n  var _a, _b, _c, _d;\n\n  var user = analytics.user();\n  var query = window.location.search;\n  json.context = (_b = (_a = json.context) !== null && _a !== void 0 ? _a : json.options) !== null && _b !== void 0 ? _b : {};\n  var ctx = json.context;\n  var anonId = json.anonymousId;\n  delete json.options;\n  json.writeKey = settings === null || settings === void 0 ? void 0 : settings.apiKey;\n  ctx.userAgent = window.navigator.userAgent; // @ts-ignore\n\n  var locale = navigator.userLanguage || navigator.language;\n\n  if (typeof ctx.locale === 'undefined' && typeof locale !== 'undefined') {\n    ctx.locale = locale;\n  }\n\n  if (!ctx.library) {\n    var type = getVersionType();\n\n    if (type === 'web') {\n      ctx.library = {\n        name: 'analytics.js',\n        version: \"next-\".concat(version)\n      };\n    } else {\n      ctx.library = {\n        name: 'analytics.js',\n        version: \"npm:next-\".concat(version)\n      };\n    }\n  }\n\n  if (query && !ctx.campaign) {\n    ctx.campaign = utm(query);\n  }\n\n  referrerId(query, ctx, (_c = analytics.options.disableClientPersistence) !== null && _c !== void 0 ? _c : false);\n  json.userId = json.userId || user.id();\n  json.anonymousId = user.anonymousId(anonId);\n  json.sentAt = new Date();\n  var failed = analytics.queue.failedInitializations || [];\n\n  if (failed.length > 0) {\n    json._metadata = {\n      failedInitializations: failed\n    };\n  }\n\n  var bundled = [];\n  var unbundled = [];\n\n  for (var key in integrations) {\n    var integration = integrations[key];\n\n    if (key === 'Segment.io') {\n      bundled.push(key);\n    }\n\n    if (integration.bundlingStatus === 'bundled') {\n      bundled.push(key);\n    }\n\n    if (integration.bundlingStatus === 'unbundled') {\n      unbundled.push(key);\n    }\n  } // This will make sure that the disabled cloud mode destinations will be\n  // included in the unbundled list.\n\n\n  for (var _i = 0, _e = (settings === null || settings === void 0 ? void 0 : settings.unbundledIntegrations) || []; _i < _e.length; _i++) {\n    var settingsUnbundled = _e[_i];\n\n    if (!unbundled.includes(settingsUnbundled)) {\n      unbundled.push(settingsUnbundled);\n    }\n  }\n\n  var configIds = (_d = settings === null || settings === void 0 ? void 0 : settings.maybeBundledConfigIds) !== null && _d !== void 0 ? _d : {};\n  var bundledConfigIds = [];\n  bundled.sort().forEach(function (name) {\n    var _a;\n\n    ;\n    ((_a = configIds[name]) !== null && _a !== void 0 ? _a : []).forEach(function (id) {\n      bundledConfigIds.push(id);\n    });\n  });\n\n  if ((settings === null || settings === void 0 ? void 0 : settings.addBundledMetadata) !== false) {\n    json._metadata = __assign(__assign({}, json._metadata), {\n      bundled: bundled.sort(),\n      unbundled: unbundled.sort(),\n      bundledIds: bundledConfigIds\n    });\n  }\n\n  var amp = ampId();\n\n  if (amp) {\n    ctx.amp = {\n      id: amp\n    };\n  }\n\n  return json;\n}","map":{"version":3,"sources":["/Users/apple/Sites/react-typescript-template/node_modules/@segment/analytics-next/src/plugins/segmentio/normalize.ts"],"names":[],"mappings":"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","sourcesContent":["import jar from 'js-cookie'\nimport { Analytics } from '../../core/analytics'\nimport { LegacySettings } from '../../browser'\nimport { SegmentEvent } from '../../core/events'\nimport { gracefulDecodeURIComponent } from '../../core/query-string/gracefulDecodeURIComponent'\nimport { tld } from '../../core/user/tld'\nimport { SegmentFacade } from '../../lib/to-facade'\nimport { SegmentioSettings } from './index'\nimport { version } from '../../generated/version'\n\nlet cookieOptions: jar.CookieAttributes | undefined\nfunction getCookieOptions(): jar.CookieAttributes {\n  if (cookieOptions) {\n    return cookieOptions\n  }\n\n  const domain = tld(window.location.href)\n  cookieOptions = {\n    expires: 31536000000, // 1 year\n    secure: false,\n    path: '/',\n  }\n  if (domain) {\n    cookieOptions.domain = domain\n  }\n\n  return cookieOptions\n}\n\n// Default value will be updated to 'web' in `bundle-umd.ts` for web build.\nlet _version: 'web' | 'npm' = 'npm'\n\nexport function setVersionType(version: typeof _version) {\n  _version = version\n}\n\nexport function getVersionType(): typeof _version {\n  return _version\n}\n\ntype Ad = { id: string; type: string }\n\nexport function ampId(): string | undefined {\n  const ampId = jar.get('_ga')\n  if (ampId && ampId.startsWith('amp')) {\n    return ampId\n  }\n}\n\nexport function utm(query: string): Record<string, string> {\n  if (query.startsWith('?')) {\n    query = query.substring(1)\n  }\n  query = query.replace(/\\?/g, '&')\n\n  return query.split('&').reduce((acc, str) => {\n    const [k, v = ''] = str.split('=')\n    if (k.includes('utm_') && k.length > 4) {\n      let utmParam = k.substr(4)\n      if (utmParam === 'campaign') {\n        utmParam = 'name'\n      }\n      acc[utmParam] = gracefulDecodeURIComponent(v)\n    }\n    return acc\n  }, {} as Record<string, string>)\n}\n\nfunction ads(query: string): Ad | undefined {\n  const queryIds: Record<string, string> = {\n    btid: 'dataxu',\n    urid: 'millennial-media',\n  }\n\n  if (query.startsWith('?')) {\n    query = query.substring(1)\n  }\n  query = query.replace(/\\?/g, '&')\n  const parts = query.split('&')\n\n  for (const part of parts) {\n    const [k, v] = part.split('=')\n    if (queryIds[k]) {\n      return {\n        id: v,\n        type: queryIds[k],\n      }\n    }\n  }\n}\n\nfunction referrerId(\n  query: string,\n  ctx: SegmentEvent['context'],\n  disablePersistance: boolean\n): void {\n  let stored = jar.get('s:context.referrer')\n  let ad = ads(query)\n\n  stored = stored ? JSON.parse(stored) : undefined\n  ad = ad ?? (stored as Ad | undefined)\n\n  if (!ad) {\n    return\n  }\n\n  if (ctx) {\n    ctx.referrer = { ...ctx.referrer, ...ad }\n  }\n\n  if (!disablePersistance) {\n    jar.set('s:context.referrer', JSON.stringify(ad), getCookieOptions())\n  }\n}\n\nexport function normalize(\n  analytics: Analytics,\n  json: ReturnType<SegmentFacade['json']>,\n  settings?: SegmentioSettings,\n  integrations?: LegacySettings['integrations']\n): object {\n  const user = analytics.user()\n  const query = window.location.search\n\n  json.context = json.context ?? json.options ?? {}\n  const ctx = json.context\n  const anonId = json.anonymousId\n\n  delete json.options\n  json.writeKey = settings?.apiKey\n  ctx.userAgent = window.navigator.userAgent\n\n  // @ts-ignore\n  const locale = navigator.userLanguage || navigator.language\n\n  if (typeof ctx.locale === 'undefined' && typeof locale !== 'undefined') {\n    ctx.locale = locale\n  }\n\n  if (!ctx.library) {\n    const type = getVersionType()\n    if (type === 'web') {\n      ctx.library = {\n        name: 'analytics.js',\n        version: `next-${version}`,\n      }\n    } else {\n      ctx.library = {\n        name: 'analytics.js',\n        version: `npm:next-${version}`,\n      }\n    }\n  }\n\n  if (query && !ctx.campaign) {\n    ctx.campaign = utm(query)\n  }\n\n  referrerId(query, ctx, analytics.options.disableClientPersistence ?? false)\n\n  json.userId = json.userId || user.id()\n  json.anonymousId = user.anonymousId(anonId)\n  json.sentAt = new Date()\n\n  const failed = analytics.queue.failedInitializations || []\n  if (failed.length > 0) {\n    json._metadata = { failedInitializations: failed }\n  }\n\n  const bundled: string[] = []\n  const unbundled: string[] = []\n\n  for (const key in integrations) {\n    const integration = integrations[key]\n    if (key === 'Segment.io') {\n      bundled.push(key)\n    }\n    if (integration.bundlingStatus === 'bundled') {\n      bundled.push(key)\n    }\n    if (integration.bundlingStatus === 'unbundled') {\n      unbundled.push(key)\n    }\n  }\n\n  // This will make sure that the disabled cloud mode destinations will be\n  // included in the unbundled list.\n  for (const settingsUnbundled of settings?.unbundledIntegrations || []) {\n    if (!unbundled.includes(settingsUnbundled)) {\n      unbundled.push(settingsUnbundled)\n    }\n  }\n\n  const configIds = settings?.maybeBundledConfigIds ?? {}\n  const bundledConfigIds: string[] = []\n\n  bundled.sort().forEach((name) => {\n    ;(configIds[name] ?? []).forEach((id) => {\n      bundledConfigIds.push(id)\n    })\n  })\n\n  if (settings?.addBundledMetadata !== false) {\n    json._metadata = {\n      ...json._metadata,\n      bundled: bundled.sort(),\n      unbundled: unbundled.sort(),\n      bundledIds: bundledConfigIds,\n    }\n  }\n\n  const amp = ampId()\n  if (amp) {\n    ctx.amp = { id: amp }\n  }\n\n  return json\n}\n"]},"metadata":{},"sourceType":"module"}