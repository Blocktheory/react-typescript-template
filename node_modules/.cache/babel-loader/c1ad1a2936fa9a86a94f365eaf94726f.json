{"ast":null,"code":"/* eslint-disable getter-return */\nimport { AnalyticsBrowser } from \"@segment/analytics-next\";\nexport const analytics = AnalyticsBrowser.load({\n  writeKey: \"WyeQ5YVlqPdhnZijQrDtxzJKzFZ6IgCl\"\n});\nexport const clickEvent = (trackHeader, name, props) => {\n  var _window$analytics;\n\n  (_window$analytics = window.analytics) === null || _window$analytics === void 0 ? void 0 : _window$analytics.track(trackHeader, {\n    eventName: name,\n    ...props\n  });\n};\nexport const setIdentity = (userId, name, email) => {\n  var _window$analytics2;\n\n  (_window$analytics2 = window.analytics) === null || _window$analytics2 === void 0 ? void 0 : _window$analytics2.identify(userId, {\n    name: name,\n    email: email\n  });\n};\nexport class SegmentAnalytics {\n  constructor(trackHeader, eventName, props, name, email) {\n    this.eventName = void 0;\n    this.trackHeader = void 0;\n    this.props = void 0;\n    this.name = void 0;\n    this.email = void 0;\n    this.trackHeader = trackHeader;\n    this.eventName = eventName;\n    this.props = props;\n    this.email = email;\n    this.name = name;\n  }\n\n  get event() {\n    if (this.eventName === \"click\") {\n      return this.clickEvent();\n    } else if (this.eventName === \"indentify\") {\n      return this.setIndentify();\n    }\n  }\n\n  clickEvent() {\n    var _window$analytics3;\n\n    console.log(\"2\");\n    return (_window$analytics3 = window.analytics) === null || _window$analytics3 === void 0 ? void 0 : _window$analytics3.track(this.trackHeader, {\n      eventName: this.eventName,\n      ...this.props\n    });\n  }\n\n  setIndentify() {\n    var _window$analytics4;\n\n    console.log(\"2\");\n    return (_window$analytics4 = window.analytics) === null || _window$analytics4 === void 0 ? void 0 : _window$analytics4.identify(this.trackHeader, {\n      name: this.name,\n      email: this.email\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Sites/react-typescript-template/src/Utils.tsx"],"names":["AnalyticsBrowser","analytics","load","writeKey","clickEvent","trackHeader","name","props","window","track","eventName","setIdentity","userId","email","identify","SegmentAnalytics","constructor","event","setIndentify","console","log"],"mappings":"AAAA;AACA,SAASA,gBAAT,QAAiC,yBAAjC;AAEA,OAAO,MAAMC,SAAS,GAAGD,gBAAgB,CAACE,IAAjB,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAlB;AAEP,OAAO,MAAMC,UAAU,GAAG,CAACC,WAAD,EAAsBC,IAAtB,EAAoCC,KAApC,KAAmD;AAAA;;AAC3E,uBAAAC,MAAM,CAACP,SAAP,wEAAkBQ,KAAlB,CAAwBJ,WAAxB,EAAqC;AACnCK,IAAAA,SAAS,EAAEJ,IADwB;AAEnC,OAAGC;AAFgC,GAArC;AAID,CALM;AAOP,OAAO,MAAMI,WAAW,GAAG,CAACC,MAAD,EAAiBN,IAAjB,EAA+BO,KAA/B,KAAiD;AAAA;;AAC1E,wBAAAL,MAAM,CAACP,SAAP,0EAAkBa,QAAlB,CAA2BF,MAA3B,EAAmC;AACjCN,IAAAA,IAAI,EAAEA,IAD2B;AAEjCO,IAAAA,KAAK,EAAEA;AAF0B,GAAnC;AAID,CALM;AAOP,OAAO,MAAME,gBAAN,CAAuB;AAO5BC,EAAAA,WAAW,CAACX,WAAD,EAAsBK,SAAtB,EAAyCH,KAAzC,EAAsDD,IAAtD,EAAqEO,KAArE,EAAqF;AAAA,SANhGH,SAMgG;AAAA,SALhGL,WAKgG;AAAA,SAJhGE,KAIgG;AAAA,SAHhGD,IAGgG;AAAA,SAFhGO,KAEgG;AAC9F,SAAKR,WAAL,GAAmBA,WAAnB;AACA,SAAKK,SAAL,GAAiBA,SAAjB;AACA,SAAKH,KAAL,GAAaA,KAAb;AACA,SAAKM,KAAL,GAAaA,KAAb;AACA,SAAKP,IAAL,GAAYA,IAAZ;AACD;;AAEQ,MAALW,KAAK,GAAG;AACV,QAAI,KAAKP,SAAL,KAAmB,OAAvB,EAAgC;AAC9B,aAAO,KAAKN,UAAL,EAAP;AACD,KAFD,MAEO,IAAI,KAAKM,SAAL,KAAmB,WAAvB,EAAoC;AACzC,aAAO,KAAKQ,YAAL,EAAP;AACD;AACF;;AAEDd,EAAAA,UAAU,GAAG;AAAA;;AACXe,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,iCAAOZ,MAAM,CAACP,SAAd,uDAAO,mBAAkBQ,KAAlB,CAAwB,KAAKJ,WAA7B,EAAoD;AACzDK,MAAAA,SAAS,EAAE,KAAKA,SADyC;AAEzD,SAAG,KAAKH;AAFiD,KAApD,CAAP;AAID;;AAEDW,EAAAA,YAAY,GAAG;AAAA;;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,iCAAOZ,MAAM,CAACP,SAAd,uDAAO,mBAAkBa,QAAlB,CAA2B,KAAKT,WAAhC,EAAuD;AAC5DC,MAAAA,IAAI,EAAE,KAAKA,IADiD;AAE5DO,MAAAA,KAAK,EAAE,KAAKA;AAFgD,KAAvD,CAAP;AAID;;AArC2B","sourcesContent":["/* eslint-disable getter-return */\nimport { AnalyticsBrowser } from \"@segment/analytics-next\";\n\nexport const analytics = AnalyticsBrowser.load({ writeKey: \"WyeQ5YVlqPdhnZijQrDtxzJKzFZ6IgCl\" });\n\nexport const clickEvent = (trackHeader: string, name: string, props: any) => {\n  window.analytics?.track(trackHeader, {\n    eventName: name,\n    ...props,\n  });\n};\n\nexport const setIdentity = (userId: string, name: string, email: string) => {\n  window.analytics?.identify(userId, {\n    name: name,\n    email: email,\n  });\n};\n\nexport class SegmentAnalytics {\n  eventName: string;\n  trackHeader?: string | null;\n  props?: any;\n  name?: string | null;\n  email?: string | null;\n\n  constructor(trackHeader: string, eventName: string, props?: any, name?: string, email?: string) {\n    this.trackHeader = trackHeader;\n    this.eventName = eventName;\n    this.props = props;\n    this.email = email;\n    this.name = name;\n  }\n\n  get event() {\n    if (this.eventName === \"click\") {\n      return this.clickEvent();\n    } else if (this.eventName === \"indentify\") {\n      return this.setIndentify();\n    }\n  }\n\n  clickEvent() {\n    console.log(\"2\");\n    return window.analytics?.track(this.trackHeader as string, {\n      eventName: this.eventName,\n      ...this.props,\n    });\n  }\n\n  setIndentify() {\n    console.log(\"2\");\n    return window.analytics?.identify(this.trackHeader as string, {\n      name: this.name,\n      email: this.email,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}