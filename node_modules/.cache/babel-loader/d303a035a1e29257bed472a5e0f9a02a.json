{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { Alias, Group, Identify, Page, Track } from '@segment/facade';\nimport { isOffline, isOnline } from '../../core/connection';\nimport { Context, ContextCancelation } from '../../core/context';\nimport { isServer } from '../../core/environment';\nimport { attempt } from '../../core/queue/delivery';\nimport { asPromise } from '../../lib/as-promise';\nimport { isPlanEventEnabled } from '../../lib/is-plan-event-enabled';\nimport { mergedOptions } from '../../lib/merged-options';\nimport { pWhile } from '../../lib/p-while';\nimport { PriorityQueue } from '../../lib/priority-queue';\nimport { PersistedPriorityQueue } from '../../lib/priority-queue/persisted';\nimport { applyDestinationMiddleware } from '../middleware';\nimport { tsubMiddleware } from '../routing-middleware';\nimport { loadIntegration, resolveVersion, unloadIntegration } from './loader';\n\nvar klona = function (evt) {\n  return JSON.parse(JSON.stringify(evt));\n};\n\nfunction flushQueue(xt, queue) {\n  return __awaiter(this, void 0, void 0, function () {\n    var failedQueue;\n\n    var _this = this;\n\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          failedQueue = [];\n\n          if (isOffline()) {\n            return [2\n            /*return*/\n            , queue];\n          }\n\n          return [4\n          /*yield*/\n          , pWhile(function () {\n            return queue.length > 0 && isOnline();\n          }, function () {\n            return __awaiter(_this, void 0, void 0, function () {\n              var ctx, result, success;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    ctx = queue.pop();\n\n                    if (!ctx) {\n                      return [2\n                      /*return*/\n                      ];\n                    }\n\n                    return [4\n                    /*yield*/\n                    , attempt(ctx, xt)];\n\n                  case 1:\n                    result = _a.sent();\n                    success = result instanceof Context;\n\n                    if (!success) {\n                      failedQueue.push(ctx);\n                    }\n\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          }) // re-add failed tasks\n          ];\n\n        case 1:\n          _a.sent(); // re-add failed tasks\n\n\n          failedQueue.map(function (failed) {\n            return queue.pushWithBackoff(failed);\n          });\n          return [2\n          /*return*/\n          , queue];\n      }\n    });\n  });\n}\n\nvar LegacyDestination =\n/** @class */\nfunction () {\n  function LegacyDestination(name, version, settings, options) {\n    if (settings === void 0) {\n      settings = {};\n    }\n\n    this.options = {};\n    this.type = 'destination';\n    this.middleware = [];\n    this._ready = false;\n    this._initialized = false;\n    this.flushing = false;\n    this.name = name;\n    this.version = version;\n    this.settings = __assign({}, settings); // AJS-Renderer sets an extraneous `type` setting that clobbers\n    // existing type defaults. We need to remove it if it's present\n\n    if (this.settings['type'] && this.settings['type'] === 'browser') {\n      delete this.settings['type'];\n    }\n\n    this.options = options;\n    this.buffer = options.disableClientPersistence ? new PriorityQueue(4, []) : new PersistedPriorityQueue(4, \"dest-\".concat(name));\n    this.scheduleFlush();\n  }\n\n  LegacyDestination.prototype.isLoaded = function () {\n    return this._ready;\n  };\n\n  LegacyDestination.prototype.ready = function () {\n    var _a;\n\n    return (_a = this.onReady) !== null && _a !== void 0 ? _a : Promise.resolve();\n  };\n\n  LegacyDestination.prototype.load = function (ctx, analyticsInstance) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (this._ready || this.onReady !== undefined) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            _a = this;\n            return [4\n            /*yield*/\n            , loadIntegration(ctx, analyticsInstance, this.name, this.version, this.settings, this.options.obfuscate)];\n\n          case 1:\n            _a.integration = _b.sent();\n            this.onReady = new Promise(function (resolve) {\n              var onReadyFn = function () {\n                _this._ready = true;\n                resolve(true);\n              };\n\n              _this.integration.once('ready', onReadyFn);\n            });\n            this.onInitialize = new Promise(function (resolve) {\n              var onInit = function () {\n                _this._initialized = true;\n                resolve(true);\n              };\n\n              _this.integration.on('initialize', onInit);\n            });\n\n            try {\n              ctx.stats.increment('analytics_js.integration.invoke', 1, [\"method:initialize\", \"integration_name:\".concat(this.name)]);\n              this.integration.initialize();\n            } catch (error) {\n              ctx.stats.increment('analytics_js.integration.invoke.error', 1, [\"method:initialize\", \"integration_name:\".concat(this.name)]);\n              throw error;\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  LegacyDestination.prototype.unload = function (_ctx, _analyticsInstance) {\n    return unloadIntegration(this.name, this.version, this.options.obfuscate);\n  };\n\n  LegacyDestination.prototype.addMiddleware = function () {\n    var _a;\n\n    var fn = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      fn[_i] = arguments[_i];\n    }\n\n    this.middleware = (_a = this.middleware).concat.apply(_a, fn);\n  };\n\n  LegacyDestination.prototype.shouldBuffer = function (ctx) {\n    return (// page events can't be buffered because of destinations that automatically add page views\n      ctx.event.type !== 'page' && (isOffline() || this._ready === false || this._initialized === false)\n    );\n  };\n\n  LegacyDestination.prototype.send = function (ctx, clz, eventType) {\n    var _a, _b;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var plan, ev, planEvent, afterMiddleware, event, err_1;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (this.shouldBuffer(ctx)) {\n              this.buffer.push(ctx);\n              this.scheduleFlush();\n              return [2\n              /*return*/\n              , ctx];\n            }\n\n            plan = (_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.plan) === null || _b === void 0 ? void 0 : _b.track;\n            ev = ctx.event.event;\n\n            if (plan && ev && this.name !== 'Segment.io') {\n              planEvent = plan[ev];\n\n              if (!isPlanEventEnabled(plan, planEvent)) {\n                ctx.updateEvent('integrations', __assign(__assign({}, ctx.event.integrations), {\n                  All: false,\n                  'Segment.io': true\n                }));\n                ctx.cancel(new ContextCancelation({\n                  retry: false,\n                  reason: \"Event \".concat(ev, \" disabled for integration \").concat(this.name, \" in tracking plan\"),\n                  type: 'Dropped by plan'\n                }));\n                return [2\n                /*return*/\n                , ctx];\n              } else {\n                ctx.updateEvent('integrations', __assign(__assign({}, ctx.event.integrations), planEvent === null || planEvent === void 0 ? void 0 : planEvent.integrations));\n              }\n\n              if ((planEvent === null || planEvent === void 0 ? void 0 : planEvent.enabled) && (planEvent === null || planEvent === void 0 ? void 0 : planEvent.integrations[this.name]) === false) {\n                ctx.cancel(new ContextCancelation({\n                  retry: false,\n                  reason: \"Event \".concat(ev, \" disabled for integration \").concat(this.name, \" in tracking plan\"),\n                  type: 'Dropped by plan'\n                }));\n                return [2\n                /*return*/\n                , ctx];\n              }\n            }\n\n            return [4\n            /*yield*/\n            , applyDestinationMiddleware(this.name, klona(ctx.event), this.middleware)];\n\n          case 1:\n            afterMiddleware = _c.sent();\n\n            if (afterMiddleware === null) {\n              return [2\n              /*return*/\n              , ctx];\n            }\n\n            event = new clz(afterMiddleware, {});\n            ctx.stats.increment('analytics_js.integration.invoke', 1, [\"method:\".concat(eventType), \"integration_name:\".concat(this.name)]);\n            _c.label = 2;\n\n          case 2:\n            _c.trys.push([2, 5,, 6]);\n\n            if (!this.integration) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , asPromise(this.integration.invoke.call(this.integration, eventType, event))];\n\n          case 3:\n            _c.sent();\n\n            _c.label = 4;\n\n          case 4:\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            err_1 = _c.sent();\n            ctx.stats.increment('analytics_js.integration.invoke.error', 1, [\"method:\".concat(eventType), \"integration_name:\".concat(this.name)]);\n            throw err_1;\n\n          case 6:\n            return [2\n            /*return*/\n            , ctx];\n        }\n      });\n    });\n  };\n\n  LegacyDestination.prototype.track = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.send(ctx, Track, 'track')];\n      });\n    });\n  };\n\n  LegacyDestination.prototype.page = function (ctx) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        if (((_a = this.integration) === null || _a === void 0 ? void 0 : _a._assumesPageview) && !this._initialized) {\n          this.integration.initialize();\n        }\n\n        return [2\n        /*return*/\n        , this.onInitialize.then(function () {\n          return _this.send(ctx, Page, 'page');\n        })];\n      });\n    });\n  };\n\n  LegacyDestination.prototype.identify = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.send(ctx, Identify, 'identify')];\n      });\n    });\n  };\n\n  LegacyDestination.prototype.alias = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.send(ctx, Alias, 'alias')];\n      });\n    });\n  };\n\n  LegacyDestination.prototype.group = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.send(ctx, Group, 'group')];\n      });\n    });\n  };\n\n  LegacyDestination.prototype.scheduleFlush = function () {\n    var _this = this;\n\n    if (this.flushing) {\n      return;\n    } // eslint-disable-next-line @typescript-eslint/no-misused-promises\n\n\n    setTimeout(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              this.flushing = true;\n              _a = this;\n              return [4\n              /*yield*/\n              , flushQueue(this, this.buffer)];\n\n            case 1:\n              _a.buffer = _b.sent();\n              this.flushing = false;\n\n              if (this.buffer.todo > 0) {\n                this.scheduleFlush();\n              }\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }, Math.random() * 5000);\n  };\n\n  return LegacyDestination;\n}();\n\nexport { LegacyDestination };\nexport function ajsDestinations(settings, globalIntegrations, options) {\n  var _a, _b;\n\n  if (globalIntegrations === void 0) {\n    globalIntegrations = {};\n  }\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (isServer()) {\n    return [];\n  }\n\n  if (settings.plan) {\n    options = options !== null && options !== void 0 ? options : {};\n    options.plan = settings.plan;\n  }\n\n  var routingRules = (_b = (_a = settings.middlewareSettings) === null || _a === void 0 ? void 0 : _a.routingRules) !== null && _b !== void 0 ? _b : [];\n  var routingMiddleware = tsubMiddleware(routingRules); // merged remote CDN settings with user provided options\n\n  var integrationOptions = mergedOptions(settings, options !== null && options !== void 0 ? options : {});\n  return Object.entries(settings.integrations).map(function (_a) {\n    var _b;\n\n    var name = _a[0],\n        integrationSettings = _a[1];\n\n    if (name.startsWith('Segment')) {\n      return;\n    }\n\n    var allDisableAndNotDefined = globalIntegrations.All === false && globalIntegrations[name] === undefined;\n\n    if (globalIntegrations[name] === false || allDisableAndNotDefined) {\n      return;\n    }\n\n    var type = integrationSettings.type,\n        bundlingStatus = integrationSettings.bundlingStatus,\n        versionSettings = integrationSettings.versionSettings; // We use `!== 'unbundled'` (versus `=== 'bundled'`) to be inclusive of\n    // destinations without a defined value for `bundlingStatus`\n\n    var deviceMode = bundlingStatus !== 'unbundled' && (type === 'browser' || ((_b = versionSettings === null || versionSettings === void 0 ? void 0 : versionSettings.componentTypes) === null || _b === void 0 ? void 0 : _b.includes('browser'))); // checking for iterable is a quick fix we need in place to prevent\n    // errors showing Iterable as a failed destiantion. Ideally, we should\n    // fix the Iterable metadata instead, but that's a longer process.\n\n    if (!deviceMode && name !== 'Segment.io' || name === 'Iterable') {\n      return;\n    }\n\n    var version = resolveVersion(integrationSettings);\n    var destination = new LegacyDestination(name, version, integrationOptions[name], options);\n    var routing = routingRules.filter(function (rule) {\n      return rule.destinationName === name;\n    });\n\n    if (routing.length > 0) {\n      destination.addMiddleware(routingMiddleware);\n    }\n\n    return destination;\n  }).filter(function (xt) {\n    return xt !== undefined;\n  });\n}","map":{"version":3,"sources":["/Users/apple/Sites/react-typescript-template/node_modules/@segment/analytics-next/src/plugins/ajs-destination/index.ts"],"names":[],"mappings":";AACA,SAAS,KAAT,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,IAAzC,EAA+C,KAA/C,QAA4D,iBAA5D;AAGA,SAAS,SAAT,EAAoB,QAApB,QAAoC,uBAApC;AACA,SAAS,OAAT,EAAkB,kBAAlB,QAA4C,oBAA5C;AACA,SAAS,QAAT,QAAyB,wBAAzB;AAEA,SAAS,OAAT,QAAwB,2BAAxB;AACA,SAAS,SAAT,QAA0B,sBAA1B;AACA,SAAS,kBAAT,QAAmC,iCAAnC;AACA,SAAS,aAAT,QAA8B,0BAA9B;AACA,SAAS,MAAT,QAAuB,mBAAvB;AACA,SAAS,aAAT,QAA8B,0BAA9B;AACA,SAAS,sBAAT,QAAuC,oCAAvC;AACA,SACE,0BADF,QAGO,eAHP;AAIA,SAAS,cAAT,QAA+B,uBAA/B;AACA,SAAS,eAAT,EAA0B,cAA1B,EAA0C,iBAA1C,QAAmE,UAAnE;;AAGA,IAAM,KAAK,GAAG,UAAC,GAAD,EAAkB;AAC9B,SAAA,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,GAAf,CAAX,CAAA;AAA+B,CADjC;;AAKA,SAAe,UAAf,CACE,EADF,EAEE,KAFF,EAE+B;;;;;;;;;AAEvB,UAAA,WAAW,GAAc,EAAzB;;AAEN,cAAI,SAAS,EAAb,EAAiB;AACf,mBAAA,CAAA;AAAA;AAAA,cAAO,KAAP,CAAA;AACD;;AAED,iBAAA,CAAA;AAAA;AAAA,YAAM,MAAM,CACV,YAAA;AAAM,mBAAA,KAAK,CAAC,MAAN,GAAe,CAAf,IAAoB,QAApB,EAAA;AAA8B,WAD1B,EAEV,YAAA;AAAA,mBAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AACQ,oBAAA,GAAG,GAAG,KAAK,CAAC,GAAN,EAAN;;AACN,wBAAI,CAAC,GAAL,EAAU;AACR,6BAAA,CAAA;AAAA;AAAA,uBAAA;AACD;;AAEc,2BAAA,CAAA;AAAA;AAAA,sBAAM,OAAO,CAAC,GAAD,EAAM,EAAN,CAAb,CAAA;;;AAAT,oBAAA,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;AACA,oBAAA,OAAO,GAAG,MAAM,YAAY,OAA5B;;AACN,wBAAI,CAAC,OAAL,EAAc;AACZ,sBAAA,WAAW,CAAC,IAAZ,CAAiB,GAAjB;AACD;;;;;;;aAVH,CAAA;AAWC,WAbS,CAAZ,CAgBA;AAhBA,WAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA,G,CAgBA;;;AACA,UAAA,WAAW,CAAC,GAAZ,CAAgB,UAAC,MAAD,EAAO;AAAK,mBAAA,KAAK,CAAC,eAAN,CAAA,MAAA,CAAA;AAA6B,WAAzD;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,KAAP,CAAA;;;;AACD;;AAED,IAAA,iBAAA;AAAA;AAAA,YAAA;AAkBE,WAAA,iBAAA,CACE,IADF,EAEE,OAFF,EAGE,QAHF,EAIE,OAJF,EAIsB;AADpB,QAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,QAAA,GAAA,EAAA;AAAyB;;AAjB3B,SAAA,OAAA,GAAuB,EAAvB;AACA,SAAA,IAAA,GAAuB,aAAvB;AACA,SAAA,UAAA,GAA8C,EAA9C;AAEQ,SAAA,MAAA,GAAS,KAAT;AACA,SAAA,YAAA,GAAe,KAAf;AAOR,SAAA,QAAA,GAAW,KAAX;AAQE,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,QAAL,GAAa,QAAA,CAAA,EAAA,EAAQ,QAAR,CAAb,CAJoB,CAMpB;AACA;;AACA,QAAI,KAAK,QAAL,CAAc,MAAd,KAAyB,KAAK,QAAL,CAAc,MAAd,MAA0B,SAAvD,EAAkE;AAChE,aAAO,KAAK,QAAL,CAAc,MAAd,CAAP;AACD;;AAED,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,MAAL,GAAc,OAAO,CAAC,wBAAR,GACV,IAAI,aAAJ,CAAkB,CAAlB,EAAqB,EAArB,CADU,GAEV,IAAI,sBAAJ,CAA2B,CAA3B,EAA8B,QAAA,MAAA,CAAQ,IAAR,CAA9B,CAFJ;AAIA,SAAK,aAAL;AACD;;AAED,EAAA,iBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,WAAO,KAAK,MAAZ;AACD,GAFD;;AAIA,EAAA,iBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;;;AACE,WAAO,CAAA,EAAA,GAAA,KAAK,OAAL,MAAY,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,EAAZ,GAAgB,OAAO,CAAC,OAAR,EAAvB;AACD,GAFD;;AAIM,EAAA,iBAAA,CAAA,SAAA,CAAA,IAAA,GAAN,UAAW,GAAX,EAAyB,iBAAzB,EAAqD;;;;;;;;;AACnD,gBAAI,KAAK,MAAL,IAAe,KAAK,OAAL,KAAiB,SAApC,EAA+C;AAC7C,qBAAA,CAAA;AAAA;AAAA,eAAA;AACD;;AAED,YAAA,EAAA,GAAA,IAAA;AAAmB,mBAAA,CAAA;AAAA;AAAA,cAAM,eAAe,CACtC,GADsC,EAEtC,iBAFsC,EAGtC,KAAK,IAHiC,EAItC,KAAK,OAJiC,EAKtC,KAAK,QALiC,EAMtC,KAAK,OAAL,CAAa,SANyB,CAArB,CAAA;;;AAAnB,YAAA,EAAA,CAAK,WAAL,GAAmB,EAAA,CAAA,IAAA,EAAnB;AASA,iBAAK,OAAL,GAAe,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAQ;AACjC,kBAAM,SAAS,GAAG,YAAA;AAChB,gBAAA,KAAI,CAAC,MAAL,GAAc,IAAd;AACA,gBAAA,OAAO,CAAC,IAAD,CAAP;AACD,eAHD;;AAKA,cAAA,KAAI,CAAC,WAAL,CAAkB,IAAlB,CAAuB,OAAvB,EAAgC,SAAhC;AACD,aAPc,CAAf;AASA,iBAAK,YAAL,GAAoB,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAQ;AACtC,kBAAM,MAAM,GAAG,YAAA;AACb,gBAAA,KAAI,CAAC,YAAL,GAAoB,IAApB;AACA,gBAAA,OAAO,CAAC,IAAD,CAAP;AACD,eAHD;;AAKA,cAAA,KAAI,CAAC,WAAL,CAAkB,EAAlB,CAAqB,YAArB,EAAmC,MAAnC;AACD,aAPmB,CAApB;;AASA,gBAAI;AACF,cAAA,GAAG,CAAC,KAAJ,CAAU,SAAV,CAAoB,iCAApB,EAAuD,CAAvD,EAA0D,CACxD,mBADwD,EAExD,oBAAA,MAAA,CAAoB,KAAK,IAAzB,CAFwD,CAA1D;AAKA,mBAAK,WAAL,CAAiB,UAAjB;AACD,aAPD,CAOE,OAAO,KAAP,EAAc;AACd,cAAA,GAAG,CAAC,KAAJ,CAAU,SAAV,CAAoB,uCAApB,EAA6D,CAA7D,EAAgE,CAC9D,mBAD8D,EAE9D,oBAAA,MAAA,CAAoB,KAAK,IAAzB,CAF8D,CAAhE;AAKA,oBAAM,KAAN;AACD;;;;;;;;AACF,GA/CK;;AAiDN,EAAA,iBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,IAAP,EAAsB,kBAAtB,EAAmD;AACjD,WAAO,iBAAiB,CAAC,KAAK,IAAN,EAAY,KAAK,OAAjB,EAA0B,KAAK,OAAL,CAAa,SAAvC,CAAxB;AACD,GAFD;;AAIA,EAAA,iBAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;;;AAAc,QAAA,EAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAsC;AAAtC,MAAA,EAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACZ,SAAK,UAAL,GAAkB,CAAA,EAAA,GAAA,KAAK,UAAL,EAAgB,MAAhB,CAAsB,KAAtB,CAAsB,EAAtB,EAA0B,EAA1B,CAAlB;AACD,GAFD;;AAIA,EAAA,iBAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,GAAb,EAAyB;AACvB,WACE;AACA,MAAA,GAAG,CAAC,KAAJ,CAAU,IAAV,KAAmB,MAAnB,KACC,SAAS,MAAM,KAAK,MAAL,KAAgB,KAA/B,IAAwC,KAAK,YAAL,KAAsB,KAD/D;AAFF;AAKD,GAND;;AAQc,EAAA,iBAAA,CAAA,SAAA,CAAA,IAAA,GAAd,UACE,GADF,EAEE,GAFF,EAGE,SAHF,EAG8D;;;;;;;;AAE5D,gBAAI,KAAK,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1B,mBAAK,MAAL,CAAY,IAAZ,CAAiB,GAAjB;AACA,mBAAK,aAAL;AACA,qBAAA,CAAA;AAAA;AAAA,gBAAO,GAAP,CAAA;AACD;;AAEK,YAAA,IAAI,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,KAAK,OAAL,MAAY,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAY,EAAA,CAAE,IAAd,MAAkB,IAAlB,IAAkB,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkB,EAAA,CAAE,KAA3B;AACA,YAAA,EAAE,GAAG,GAAG,CAAC,KAAJ,CAAU,KAAf;;AAEN,gBAAI,IAAI,IAAI,EAAR,IAAc,KAAK,IAAL,KAAc,YAAhC,EAA8C;AAEtC,cAAA,SAAS,GAAG,IAAI,CAAC,EAAD,CAAhB;;AACN,kBAAI,CAAC,kBAAkB,CAAC,IAAD,EAAO,SAAP,CAAvB,EAA0C;AACxC,gBAAA,GAAG,CAAC,WAAJ,CAAgB,cAAhB,EAA8B,QAAA,CAAA,QAAA,CAAA,EAAA,EACzB,GAAG,CAAC,KAAJ,CAAU,YADe,CAAA,EACH;AACzB,kBAAA,GAAG,EAAE,KADoB;AAEzB,gCAAc;AAFW,iBADG,CAA9B;AAKA,gBAAA,GAAG,CAAC,MAAJ,CACE,IAAI,kBAAJ,CAAuB;AACrB,kBAAA,KAAK,EAAE,KADc;AAErB,kBAAA,MAAM,EAAE,SAAA,MAAA,CAAS,EAAT,EAAW,4BAAX,EAAW,MAAX,CAAwC,KAAK,IAA7C,EAAiD,mBAAjD,CAFa;AAGrB,kBAAA,IAAI,EAAE;AAHe,iBAAvB,CADF;AAOA,uBAAA,CAAA;AAAA;AAAA,kBAAO,GAAP,CAAA;AACD,eAdD,MAcO;AACL,gBAAA,GAAG,CAAC,WAAJ,CAAgB,cAAhB,EAA8B,QAAA,CAAA,QAAA,CAAA,EAAA,EACzB,GAAG,CAAC,KAAJ,CAAU,YADe,CAAA,EAEzB,SAAS,KAAA,IAAT,IAAA,SAAS,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAA,SAAS,CAAE,YAFc,CAA9B;AAID;;AAED,kBAAI,CAAA,SAAS,KAAA,IAAT,IAAA,SAAS,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAA,SAAS,CAAE,OAAX,KAAsB,CAAA,SAAS,KAAA,IAAT,IAAA,SAAS,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAA,SAAS,CAAE,YAAX,CAAwB,KAAK,IAA7B,CAAA,MAAuC,KAAjE,EAAwE;AACtE,gBAAA,GAAG,CAAC,MAAJ,CACE,IAAI,kBAAJ,CAAuB;AACrB,kBAAA,KAAK,EAAE,KADc;AAErB,kBAAA,MAAM,EAAE,SAAA,MAAA,CAAS,EAAT,EAAW,4BAAX,EAAW,MAAX,CAAwC,KAAK,IAA7C,EAAiD,mBAAjD,CAFa;AAGrB,kBAAA,IAAI,EAAE;AAHe,iBAAvB,CADF;AAOA,uBAAA,CAAA;AAAA;AAAA,kBAAO,GAAP,CAAA;AACD;AACF;;AAEuB,mBAAA,CAAA;AAAA;AAAA,cAAM,0BAA0B,CACtD,KAAK,IADiD,EAEtD,KAAK,CAAC,GAAG,CAAC,KAAL,CAFiD,EAGtD,KAAK,UAHiD,CAAhC,CAAA;;;AAAlB,YAAA,eAAe,GAAG,EAAA,CAAA,IAAA,EAAlB;;AAMN,gBAAI,eAAe,KAAK,IAAxB,EAA8B;AAC5B,qBAAA,CAAA;AAAA;AAAA,gBAAO,GAAP,CAAA;AACD;;AAEK,YAAA,KAAK,GAAG,IAAI,GAAJ,CAAQ,eAAR,EAAyB,EAAzB,CAAR;AAEN,YAAA,GAAG,CAAC,KAAJ,CAAU,SAAV,CAAoB,iCAApB,EAAuD,CAAvD,EAA0D,CACxD,UAAA,MAAA,CAAU,SAAV,CADwD,EAExD,oBAAA,MAAA,CAAoB,KAAK,IAAzB,CAFwD,CAA1D;;;;;;iBAMM,KAAK,W,EAAL,OAAA,CAAA;AAAA;AAAA,cAAA,CAAA,CAAA;AACF,mBAAA,CAAA;AAAA;AAAA,cAAM,SAAS,CACb,KAAK,WAAL,CAAiB,MAAjB,CAAwB,IAAxB,CAA6B,KAAK,WAAlC,EAA+C,SAA/C,EAA0D,KAA1D,CADa,CAAf,CAAA;;;AAAA,YAAA,EAAA,CAAA,IAAA;;;;;;;;;;;AAKF,YAAA,GAAG,CAAC,KAAJ,CAAU,SAAV,CAAoB,uCAApB,EAA6D,CAA7D,EAAgE,CAC9D,UAAA,MAAA,CAAU,SAAV,CAD8D,EAE9D,oBAAA,MAAA,CAAoB,KAAK,IAAzB,CAF8D,CAAhE;AAIA,kBAAM,KAAN;;;AAGF,mBAAA,CAAA;AAAA;AAAA,cAAO,GAAP,CAAA;;;;AACD,GAlFa;;AAoFR,EAAA,iBAAA,CAAA,SAAA,CAAA,KAAA,GAAN,UAAY,GAAZ,EAAwB;;;AACtB,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,IAAL,CAAU,GAAV,EAAe,KAAf,EAA0C,OAA1C,CAAP,CAAA;;;AACD,GAFK;;AAIA,EAAA,iBAAA,CAAA,SAAA,CAAA,IAAA,GAAN,UAAW,GAAX,EAAuB;;;;;;;AACrB,YAAI,CAAA,CAAA,EAAA,GAAA,KAAK,WAAL,MAAgB,IAAhB,IAAgB,EAAA,KAAA,KAAA,CAAhB,GAAgB,KAAA,CAAhB,GAAgB,EAAA,CAAE,gBAAlB,KAAsC,CAAC,KAAK,YAAhD,EAA8D;AAC5D,eAAK,WAAL,CAAiB,UAAjB;AACD;;AAED,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,YAAL,CAAmB,IAAnB,CAAwB,YAAA;AAC7B,iBAAO,KAAI,CAAC,IAAL,CAAU,GAAV,EAAe,IAAf,EAAwC,MAAxC,CAAP;AACD,SAFM,CAAP,CAAA;;;AAGD,GARK;;AAUA,EAAA,iBAAA,CAAA,SAAA,CAAA,QAAA,GAAN,UAAe,GAAf,EAA2B;;;AACzB,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,IAAL,CAAU,GAAV,EAAe,QAAf,EAAgD,UAAhD,CAAP,CAAA;;;AACD,GAFK;;AAIA,EAAA,iBAAA,CAAA,SAAA,CAAA,KAAA,GAAN,UAAY,GAAZ,EAAwB;;;AACtB,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,IAAL,CAAU,GAAV,EAAe,KAAf,EAA0C,OAA1C,CAAP,CAAA;;;AACD,GAFK;;AAIA,EAAA,iBAAA,CAAA,SAAA,CAAA,KAAA,GAAN,UAAY,GAAZ,EAAwB;;;AACtB,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,IAAL,CAAU,GAAV,EAAe,KAAf,EAA0C,OAA1C,CAAP,CAAA;;;AACD,GAFK;;AAIE,EAAA,iBAAA,CAAA,SAAA,CAAA,aAAA,GAAR,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,QAAI,KAAK,QAAT,EAAmB;AACjB;AACD,KAHH,CAKE;;;AACA,IAAA,UAAU,CAAC,YAAA;AAAA,aAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;AACT,mBAAK,QAAL,GAAgB,IAAhB;AACA,cAAA,EAAA,GAAA,IAAA;AAAc,qBAAA,CAAA;AAAA;AAAA,gBAAM,UAAU,CAAC,IAAD,EAAO,KAAK,MAAZ,CAAhB,CAAA;;;AAAd,cAAA,EAAA,CAAK,MAAL,GAAc,EAAA,CAAA,IAAA,EAAd;AACA,mBAAK,QAAL,GAAgB,KAAhB;;AAEA,kBAAI,KAAK,MAAL,CAAY,IAAZ,GAAmB,CAAvB,EAA0B;AACxB,qBAAK,aAAL;AACD;;;;;;;OAPQ,CAAA;AAQV,KARS,EAQP,IAAI,CAAC,MAAL,KAAgB,IART,CAAV;AASD,GAfO;;AAgBV,SAAA,iBAAA;AAAC,CAjPD,EAAA;;;AAmPA,OAAM,SAAU,eAAV,CACJ,QADI,EAEJ,kBAFI,EAGJ,OAHI,EAGqB;;;AADzB,MAAA,kBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,EAAA;AAAqC;;AACrC,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,EAAA;AAAyB;;AAEzB,MAAI,QAAQ,EAAZ,EAAgB;AACd,WAAO,EAAP;AACD;;AAED,MAAI,QAAQ,CAAC,IAAb,EAAmB;AACjB,IAAA,OAAO,GAAG,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAA,OAAA,GAAW,EAArB;AACA,IAAA,OAAO,CAAC,IAAR,GAAe,QAAQ,CAAC,IAAxB;AACD;;AAED,MAAM,YAAY,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,QAAQ,CAAC,kBAAT,MAA2B,IAA3B,IAA2B,EAAA,KAAA,KAAA,CAA3B,GAA2B,KAAA,CAA3B,GAA2B,EAAA,CAAE,YAA7B,MAAyC,IAAzC,IAAyC,EAAA,KAAA,KAAA,CAAzC,GAAyC,EAAzC,GAA6C,EAAlE;AACA,MAAM,iBAAiB,GAAG,cAAc,CAAC,YAAD,CAAxC,CAZyB,CAczB;;AACA,MAAM,kBAAkB,GAAG,aAAa,CAAC,QAAD,EAAW,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAA,OAAA,GAAW,EAAtB,CAAxC;AAKA,SAAO,MAAM,CAAC,OAAP,CAAe,QAAQ,CAAC,YAAxB,EACJ,GADI,CACA,UAAC,EAAD,EAA4B;;;QAA1B,IAAI,GAAA,EAAA,CAAA,CAAA,C;QAAE,mBAAmB,GAAA,EAAA,CAAA,CAAA,C;;AAC9B,QAAI,IAAI,CAAC,UAAL,CAAgB,SAAhB,CAAJ,EAAgC;AAC9B;AACD;;AAED,QAAM,uBAAuB,GAC3B,kBAAkB,CAAC,GAAnB,KAA2B,KAA3B,IACA,kBAAkB,CAAC,IAAD,CAAlB,KAA6B,SAF/B;;AAIA,QAAI,kBAAkB,CAAC,IAAD,CAAlB,KAA6B,KAA7B,IAAsC,uBAA1C,EAAmE;AACjE;AACD;;AAEO,QAAA,IAAI,GAAsC,mBAAmB,CAAzD,IAAJ;AAAA,QAAM,cAAc,GAAsB,mBAAmB,CAAzC,cAApB;AAAA,QAAsB,eAAe,GAAK,mBAAmB,CAAxB,eAArC,CAbuB,CAc/B;AACA;;AACA,QAAM,UAAU,GACd,cAAc,KAAK,WAAnB,KACC,IAAI,KAAK,SAAT,KACC,CAAA,EAAA,GAAA,eAAe,KAAA,IAAf,IAAA,eAAe,KAAA,KAAA,CAAf,GAAe,KAAA,CAAf,GAAA,eAAe,CAAE,cAAjB,MAA+B,IAA/B,IAA+B,EAAA,KAAA,KAAA,CAA/B,GAA+B,KAAA,CAA/B,GAA+B,EAAA,CAAE,QAAF,CAAW,SAAX,CADhC,CADD,CADF,CAhB+B,CAqB/B;AACA;AACA;;AACA,QAAK,CAAC,UAAD,IAAe,IAAI,KAAK,YAAzB,IAA0C,IAAI,KAAK,UAAvD,EAAmE;AACjE;AACD;;AACD,QAAM,OAAO,GAAG,cAAc,CAAC,mBAAD,CAA9B;AACA,QAAM,WAAW,GAAG,IAAI,iBAAJ,CAClB,IADkB,EAElB,OAFkB,EAGlB,kBAAkB,CAAC,IAAD,CAHA,EAIlB,OAJkB,CAApB;AAOA,QAAM,OAAO,GAAG,YAAY,CAAC,MAAb,CACd,UAAC,IAAD,EAAK;AAAK,aAAA,IAAI,CAAC,eAAL,KAAA,IAAA;AAA6B,KADzB,CAAhB;;AAGA,QAAI,OAAO,CAAC,MAAR,GAAiB,CAArB,EAAwB;AACtB,MAAA,WAAW,CAAC,aAAZ,CAA0B,iBAA1B;AACD;;AAED,WAAO,WAAP;AACD,GA5CI,EA6CJ,MA7CI,CA6CG,UAAC,EAAD,EAAG;AAAK,WAAA,EAAE,KAAF,SAAA;AAAgB,GA7C3B,CAAP;AA8CD","sourcesContent":["import { Integrations, JSONObject, SegmentEvent } from '@/core/events'\nimport { Alias, Facade, Group, Identify, Page, Track } from '@segment/facade'\nimport { Analytics, InitOptions } from '../../core/analytics'\nimport { LegacySettings } from '../../browser'\nimport { isOffline, isOnline } from '../../core/connection'\nimport { Context, ContextCancelation } from '../../core/context'\nimport { isServer } from '../../core/environment'\nimport { Plugin } from '../../core/plugin'\nimport { attempt } from '../../core/queue/delivery'\nimport { asPromise } from '../../lib/as-promise'\nimport { isPlanEventEnabled } from '../../lib/is-plan-event-enabled'\nimport { mergedOptions } from '../../lib/merged-options'\nimport { pWhile } from '../../lib/p-while'\nimport { PriorityQueue } from '../../lib/priority-queue'\nimport { PersistedPriorityQueue } from '../../lib/priority-queue/persisted'\nimport {\n  applyDestinationMiddleware,\n  DestinationMiddlewareFunction,\n} from '../middleware'\nimport { tsubMiddleware } from '../routing-middleware'\nimport { loadIntegration, resolveVersion, unloadIntegration } from './loader'\nimport { LegacyIntegration } from './types'\n\nconst klona = (evt: SegmentEvent): SegmentEvent =>\n  JSON.parse(JSON.stringify(evt))\n\nexport type ClassType<T> = new (...args: unknown[]) => T\n\nasync function flushQueue(\n  xt: Plugin,\n  queue: PriorityQueue<Context>\n): Promise<PriorityQueue<Context>> {\n  const failedQueue: Context[] = []\n\n  if (isOffline()) {\n    return queue\n  }\n\n  await pWhile(\n    () => queue.length > 0 && isOnline(),\n    async () => {\n      const ctx = queue.pop()\n      if (!ctx) {\n        return\n      }\n\n      const result = await attempt(ctx, xt)\n      const success = result instanceof Context\n      if (!success) {\n        failedQueue.push(ctx)\n      }\n    }\n  )\n\n  // re-add failed tasks\n  failedQueue.map((failed) => queue.pushWithBackoff(failed))\n  return queue\n}\n\nexport class LegacyDestination implements Plugin {\n  name: string\n  version: string\n  settings: JSONObject\n  options: InitOptions = {}\n  type: Plugin['type'] = 'destination'\n  middleware: DestinationMiddlewareFunction[] = []\n\n  private _ready = false\n  private _initialized = false\n  private onReady: Promise<unknown> | undefined\n  private onInitialize: Promise<unknown> | undefined\n\n  integration: LegacyIntegration | undefined\n\n  buffer: PriorityQueue<Context>\n  flushing = false\n\n  constructor(\n    name: string,\n    version: string,\n    settings: JSONObject = {},\n    options: InitOptions\n  ) {\n    this.name = name\n    this.version = version\n    this.settings = { ...settings }\n\n    // AJS-Renderer sets an extraneous `type` setting that clobbers\n    // existing type defaults. We need to remove it if it's present\n    if (this.settings['type'] && this.settings['type'] === 'browser') {\n      delete this.settings['type']\n    }\n\n    this.options = options\n    this.buffer = options.disableClientPersistence\n      ? new PriorityQueue(4, [])\n      : new PersistedPriorityQueue(4, `dest-${name}`)\n\n    this.scheduleFlush()\n  }\n\n  isLoaded(): boolean {\n    return this._ready\n  }\n\n  ready(): Promise<unknown> {\n    return this.onReady ?? Promise.resolve()\n  }\n\n  async load(ctx: Context, analyticsInstance: Analytics): Promise<void> {\n    if (this._ready || this.onReady !== undefined) {\n      return\n    }\n\n    this.integration = await loadIntegration(\n      ctx,\n      analyticsInstance,\n      this.name,\n      this.version,\n      this.settings,\n      this.options.obfuscate\n    )\n\n    this.onReady = new Promise((resolve) => {\n      const onReadyFn = (): void => {\n        this._ready = true\n        resolve(true)\n      }\n\n      this.integration!.once('ready', onReadyFn)\n    })\n\n    this.onInitialize = new Promise((resolve) => {\n      const onInit = (): void => {\n        this._initialized = true\n        resolve(true)\n      }\n\n      this.integration!.on('initialize', onInit)\n    })\n\n    try {\n      ctx.stats.increment('analytics_js.integration.invoke', 1, [\n        `method:initialize`,\n        `integration_name:${this.name}`,\n      ])\n\n      this.integration.initialize()\n    } catch (error) {\n      ctx.stats.increment('analytics_js.integration.invoke.error', 1, [\n        `method:initialize`,\n        `integration_name:${this.name}`,\n      ])\n\n      throw error\n    }\n  }\n\n  unload(_ctx: Context, _analyticsInstance: Analytics): Promise<void> {\n    return unloadIntegration(this.name, this.version, this.options.obfuscate)\n  }\n\n  addMiddleware(...fn: DestinationMiddlewareFunction[]): void {\n    this.middleware = this.middleware.concat(...fn)\n  }\n\n  shouldBuffer(ctx: Context): boolean {\n    return (\n      // page events can't be buffered because of destinations that automatically add page views\n      ctx.event.type !== 'page' &&\n      (isOffline() || this._ready === false || this._initialized === false)\n    )\n  }\n\n  private async send<T extends Facade>(\n    ctx: Context,\n    clz: ClassType<T>,\n    eventType: 'track' | 'identify' | 'page' | 'alias' | 'group'\n  ): Promise<Context> {\n    if (this.shouldBuffer(ctx)) {\n      this.buffer.push(ctx)\n      this.scheduleFlush()\n      return ctx\n    }\n\n    const plan = this.options?.plan?.track\n    const ev = ctx.event.event\n\n    if (plan && ev && this.name !== 'Segment.io') {\n      // events are always sent to segment (legacy behavior)\n      const planEvent = plan[ev]\n      if (!isPlanEventEnabled(plan, planEvent)) {\n        ctx.updateEvent('integrations', {\n          ...ctx.event.integrations,\n          All: false,\n          'Segment.io': true,\n        })\n        ctx.cancel(\n          new ContextCancelation({\n            retry: false,\n            reason: `Event ${ev} disabled for integration ${this.name} in tracking plan`,\n            type: 'Dropped by plan',\n          })\n        )\n        return ctx\n      } else {\n        ctx.updateEvent('integrations', {\n          ...ctx.event.integrations,\n          ...planEvent?.integrations,\n        })\n      }\n\n      if (planEvent?.enabled && planEvent?.integrations[this.name] === false) {\n        ctx.cancel(\n          new ContextCancelation({\n            retry: false,\n            reason: `Event ${ev} disabled for integration ${this.name} in tracking plan`,\n            type: 'Dropped by plan',\n          })\n        )\n        return ctx\n      }\n    }\n\n    const afterMiddleware = await applyDestinationMiddleware(\n      this.name,\n      klona(ctx.event),\n      this.middleware\n    )\n\n    if (afterMiddleware === null) {\n      return ctx\n    }\n\n    const event = new clz(afterMiddleware, {})\n\n    ctx.stats.increment('analytics_js.integration.invoke', 1, [\n      `method:${eventType}`,\n      `integration_name:${this.name}`,\n    ])\n\n    try {\n      if (this.integration) {\n        await asPromise(\n          this.integration.invoke.call(this.integration, eventType, event)\n        )\n      }\n    } catch (err) {\n      ctx.stats.increment('analytics_js.integration.invoke.error', 1, [\n        `method:${eventType}`,\n        `integration_name:${this.name}`,\n      ])\n      throw err\n    }\n\n    return ctx\n  }\n\n  async track(ctx: Context): Promise<Context> {\n    return this.send(ctx, Track as ClassType<Track>, 'track')\n  }\n\n  async page(ctx: Context): Promise<Context> {\n    if (this.integration?._assumesPageview && !this._initialized) {\n      this.integration.initialize()\n    }\n\n    return this.onInitialize!.then(() => {\n      return this.send(ctx, Page as ClassType<Page>, 'page')\n    })\n  }\n\n  async identify(ctx: Context): Promise<Context> {\n    return this.send(ctx, Identify as ClassType<Identify>, 'identify')\n  }\n\n  async alias(ctx: Context): Promise<Context> {\n    return this.send(ctx, Alias as ClassType<Alias>, 'alias')\n  }\n\n  async group(ctx: Context): Promise<Context> {\n    return this.send(ctx, Group as ClassType<Group>, 'group')\n  }\n\n  private scheduleFlush(): void {\n    if (this.flushing) {\n      return\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    setTimeout(async () => {\n      this.flushing = true\n      this.buffer = await flushQueue(this, this.buffer)\n      this.flushing = false\n\n      if (this.buffer.todo > 0) {\n        this.scheduleFlush()\n      }\n    }, Math.random() * 5000)\n  }\n}\n\nexport function ajsDestinations(\n  settings: LegacySettings,\n  globalIntegrations: Integrations = {},\n  options: InitOptions = {}\n): LegacyDestination[] {\n  if (isServer()) {\n    return []\n  }\n\n  if (settings.plan) {\n    options = options ?? {}\n    options.plan = settings.plan\n  }\n\n  const routingRules = settings.middlewareSettings?.routingRules ?? []\n  const routingMiddleware = tsubMiddleware(routingRules)\n\n  // merged remote CDN settings with user provided options\n  const integrationOptions = mergedOptions(settings, options ?? {}) as Record<\n    string,\n    JSONObject\n  >\n\n  return Object.entries(settings.integrations)\n    .map(([name, integrationSettings]) => {\n      if (name.startsWith('Segment')) {\n        return\n      }\n\n      const allDisableAndNotDefined =\n        globalIntegrations.All === false &&\n        globalIntegrations[name] === undefined\n\n      if (globalIntegrations[name] === false || allDisableAndNotDefined) {\n        return\n      }\n\n      const { type, bundlingStatus, versionSettings } = integrationSettings\n      // We use `!== 'unbundled'` (versus `=== 'bundled'`) to be inclusive of\n      // destinations without a defined value for `bundlingStatus`\n      const deviceMode =\n        bundlingStatus !== 'unbundled' &&\n        (type === 'browser' ||\n          versionSettings?.componentTypes?.includes('browser'))\n\n      // checking for iterable is a quick fix we need in place to prevent\n      // errors showing Iterable as a failed destiantion. Ideally, we should\n      // fix the Iterable metadata instead, but that's a longer process.\n      if ((!deviceMode && name !== 'Segment.io') || name === 'Iterable') {\n        return\n      }\n      const version = resolveVersion(integrationSettings)\n      const destination = new LegacyDestination(\n        name,\n        version,\n        integrationOptions[name],\n        options\n      )\n\n      const routing = routingRules.filter(\n        (rule) => rule.destinationName === name\n      )\n      if (routing.length > 0) {\n        destination.addMiddleware(routingMiddleware)\n      }\n\n      return destination\n    })\n    .filter((xt) => xt !== undefined) as LegacyDestination[]\n}\n"]},"metadata":{},"sourceType":"module"}