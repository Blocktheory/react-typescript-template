{"ast":null,"code":"import { __assign } from \"tslib\";\n\nvar Logger =\n/** @class */\nfunction () {\n  function Logger() {\n    var _this = this;\n\n    this._logs = [];\n\n    this.log = function (level, message, extras) {\n      var time = new Date();\n\n      _this._logs.push({\n        level: level,\n        message: message,\n        time: time,\n        extras: extras\n      });\n    };\n  }\n\n  Object.defineProperty(Logger.prototype, \"logs\", {\n    get: function () {\n      return this._logs;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Logger.prototype.flush = function () {\n    if (this.logs.length > 1) {\n      var formatted = this._logs.reduce(function (logs, log) {\n        var _a;\n\n        var _b, _c;\n\n        var line = __assign(__assign({}, log), {\n          json: JSON.stringify(log.extras, null, ' '),\n          extras: log.extras\n        });\n\n        delete line['time'];\n        var key = (_c = (_b = log.time) === null || _b === void 0 ? void 0 : _b.toISOString()) !== null && _c !== void 0 ? _c : '';\n\n        if (logs[key]) {\n          key = \"\".concat(key, \"-\").concat(Math.random());\n        }\n\n        return __assign(__assign({}, logs), (_a = {}, _a[key] = line, _a));\n      }, {}); // ie doesn't like console.table\n\n\n      if (console.table) {\n        console.table(formatted);\n      } else {\n        console.log(formatted);\n      }\n    } else {\n      this.logs.forEach(function (logEntry) {\n        var level = logEntry.level,\n            message = logEntry.message,\n            extras = logEntry.extras;\n\n        if (level === 'info' || level === 'debug') {\n          console.log(message, extras !== null && extras !== void 0 ? extras : '');\n        } else {\n          console[level](message, extras !== null && extras !== void 0 ? extras : '');\n        }\n      });\n    }\n\n    this._logs = [];\n  };\n\n  return Logger;\n}();\n\nexport default Logger;","map":{"version":3,"sources":["/Users/apple/Sites/react-typescript-template/node_modules/@segment/analytics-next/src/core/logger/index.ts"],"names":[],"mappings":"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","sourcesContent":["export type LogLevel = 'debug' | 'info' | 'warn' | 'error'\nexport type LogMessage = {\n  level: LogLevel\n  message: string\n  time?: Date\n  extras?: object & {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any\n  }\n}\n\nexport default class Logger {\n  private _logs: LogMessage[] = []\n\n  log = (level: LogLevel, message: string, extras?: object): void => {\n    const time = new Date()\n    this._logs.push({\n      level,\n      message,\n      time,\n      extras,\n    })\n  }\n\n  public get logs(): LogMessage[] {\n    return this._logs\n  }\n\n  public flush(): void {\n    if (this.logs.length > 1) {\n      const formatted = this._logs.reduce((logs, log) => {\n        const line = {\n          ...log,\n          json: JSON.stringify(log.extras, null, ' '),\n          extras: log.extras,\n        }\n\n        delete line['time']\n\n        let key = log.time?.toISOString() ?? ''\n        if (logs[key]) {\n          key = `${key}-${Math.random()}`\n        }\n\n        return {\n          ...logs,\n          [key]: line,\n        }\n      }, {} as Record<string, LogMessage>)\n\n      // ie doesn't like console.table\n      if (console.table) {\n        console.table(formatted)\n      } else {\n        console.log(formatted)\n      }\n    } else {\n      this.logs.forEach((logEntry) => {\n        const { level, message, extras } = logEntry\n\n        if (level === 'info' || level === 'debug') {\n          console.log(message, extras ?? '')\n        } else {\n          console[level](message, extras ?? '')\n        }\n      })\n    }\n\n    this._logs = []\n  }\n}\n"]},"metadata":{},"sourceType":"module"}