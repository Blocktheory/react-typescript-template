{"ast":null,"code":"import { __spreadArray } from \"tslib\";\n\nvar Emitter =\n/** @class */\nfunction () {\n  function Emitter() {\n    this.callbacks = {};\n  }\n\n  Emitter.prototype.on = function (event, callback) {\n    var _a;\n\n    this.callbacks[event] = __spreadArray(__spreadArray([], (_a = this.callbacks[event]) !== null && _a !== void 0 ? _a : [], true), [callback], false);\n    return this;\n  };\n\n  Emitter.prototype.once = function (event, fn) {\n    var _this = this;\n\n    var on = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      _this.off(event, on);\n\n      fn.apply(_this, args);\n    };\n\n    this.on(event, on);\n    return this;\n  };\n\n  Emitter.prototype.off = function (event, callback) {\n    var _a;\n\n    var fns = (_a = this.callbacks[event]) !== null && _a !== void 0 ? _a : [];\n    var without = fns.filter(function (fn) {\n      return fn !== callback;\n    });\n    this.callbacks[event] = without;\n    return this;\n  };\n\n  Emitter.prototype.emit = function (event) {\n    var _this = this;\n\n    var _a;\n\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var callbacks = (_a = this.callbacks[event]) !== null && _a !== void 0 ? _a : [];\n    callbacks.forEach(function (callback) {\n      callback.apply(_this, args);\n    });\n    return this;\n  };\n\n  return Emitter;\n}();\n\nexport { Emitter };","map":{"version":3,"sources":["/Users/apple/Sites/react-typescript-template/node_modules/@segment/analytics-core/src/emitter/index.ts"],"names":[],"mappings":";;AAAA,IAAA,OAAA;AAAA;AAAA,YAAA;AAAA,WAAA,OAAA,GAAA;AACU,SAAA,SAAA,GAAwC,EAAxC;AA+BT;;AA7BC,EAAA,OAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,KAAH,EAAkB,QAAlB,EAAoC;;;AAClC,SAAK,SAAL,CAAe,KAAf,IAAqB,aAAA,CAAA,aAAA,CAAA,EAAA,EAAQ,CAAA,EAAA,GAAA,KAAK,SAAL,CAAe,KAAf,CAAA,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,EAArB,GAAyB,EAAjC,EAAoC,IAApC,CAAA,EAAoC,CAAE,QAAF,CAApC,EAA8C,KAA9C,CAArB;AACA,WAAO,IAAP;AACD,GAHD;;AAKA,EAAA,OAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,KAAL,EAAoB,EAApB,EAAgC;AAAhC,QAAA,KAAA,GAAA,IAAA;;AACE,QAAM,EAAE,GAAG,YAAA;AAAC,UAAA,IAAA,GAAA,EAAA;;WAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAkB;AAAlB,QAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACV,MAAA,KAAI,CAAC,GAAL,CAAS,KAAT,EAAgB,EAAhB;;AACA,MAAA,EAAE,CAAC,KAAH,CAAS,KAAT,EAAe,IAAf;AACD,KAHD;;AAKA,SAAK,EAAL,CAAQ,KAAR,EAAe,EAAf;AACA,WAAO,IAAP;AACD,GARD;;AAUA,EAAA,OAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,KAAJ,EAAmB,QAAnB,EAAqC;;;AACnC,QAAM,GAAG,GAAG,CAAA,EAAA,GAAA,KAAK,SAAL,CAAe,KAAf,CAAA,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,EAArB,GAAyB,EAArC;AACA,QAAM,OAAO,GAAG,GAAG,CAAC,MAAJ,CAAW,UAAC,EAAD,EAAG;AAAK,aAAA,EAAE,KAAF,QAAA;AAAe,KAAlC,CAAhB;AACA,SAAK,SAAL,CAAe,KAAf,IAAwB,OAAxB;AACA,WAAO,IAAP;AACD,GALD;;AAOA,EAAA,OAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,KAAL,EAAkB;AAAlB,QAAA,KAAA,GAAA,IAAA;;;;AAAoB,QAAA,IAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAkB;AAAlB,MAAA,IAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAClB,QAAM,SAAS,GAAG,CAAA,EAAA,GAAA,KAAK,SAAL,CAAe,KAAf,CAAA,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,EAArB,GAAyB,EAA3C;AACA,IAAA,SAAS,CAAC,OAAV,CAAkB,UAAC,QAAD,EAAS;AACzB,MAAA,QAAQ,CAAC,KAAT,CAAe,KAAf,EAAqB,IAArB;AACD,KAFD;AAGA,WAAO,IAAP;AACD,GAND;;AAOF,SAAA,OAAA;AAAC,CAhCD,EAAA","sourcesContent":["export class Emitter {\n  private callbacks: Record<string, Function[]> = {}\n\n  on(event: string, callback: Function): this {\n    this.callbacks[event] = [...(this.callbacks[event] ?? []), callback]\n    return this\n  }\n\n  once(event: string, fn: Function): this {\n    const on = (...args: unknown[]): void => {\n      this.off(event, on)\n      fn.apply(this, args)\n    }\n\n    this.on(event, on)\n    return this\n  }\n\n  off(event: string, callback: Function): this {\n    const fns = this.callbacks[event] ?? []\n    const without = fns.filter((fn) => fn !== callback)\n    this.callbacks[event] = without\n    return this\n  }\n\n  emit(event: string, ...args: unknown[]): this {\n    const callbacks = this.callbacks[event] ?? []\n    callbacks.forEach((callback) => {\n      callback.apply(this, args)\n    })\n    return this\n  }\n}\n"]},"metadata":{},"sourceType":"module"}